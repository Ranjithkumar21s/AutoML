2022-11-05 16:35:28,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 16:35:28,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 16:35:28,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 16:35:28,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 16:35:30,547:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-05 16:54:12,164:INFO:PyCaret ClassificationExperiment
2022-11-05 16:54:12,165:INFO:Logging name: clf-default-name
2022-11-05 16:54:12,165:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-05 16:54:12,165:INFO:version 3.0.0.rc4
2022-11-05 16:54:12,165:INFO:Initializing setup()
2022-11-05 16:54:12,165:INFO:self.USI: bd55
2022-11-05 16:54:12,165:INFO:self.variable_keys: {'memory', 'exp_name_log', 'gpu_param', 'USI', 'pipeline', '_available_plots', '_is_multiclass', 'X_train', '_gpu_n_jobs_param', 'n_jobs_param', 'master_model_container', 'y_test', 'fix_imbalance', '_all_models', 'y_train', 'fold_groups_param', '_all_metrics', 'exp_id', '_ml_usecase', 'data', 'X', 'fold_shuffle_param', 'fold_generator', 'display_container', 'log_plots_param', 'logging_param', 'X_test', 'html_param', 'variable_keys', 'target_param', 'y', 'seed', '_all_models_internal', 'idx'}
2022-11-05 16:54:12,165:INFO:Checking environment
2022-11-05 16:54:12,165:INFO:python_version: 3.9.13
2022-11-05 16:54:12,165:INFO:python_build: ('main', 'Oct 13 2022 21:23:06')
2022-11-05 16:54:12,165:INFO:machine: AMD64
2022-11-05 16:54:12,226:INFO:platform: Windows-10-10.0.22000-SP0
2022-11-05 16:54:12,227:INFO:Memory: svmem(total=8277590016, available=2110828544, percent=74.5, used=6166761472, free=2110828544)
2022-11-05 16:54:12,227:INFO:Physical Core: 4
2022-11-05 16:54:12,227:INFO:Logical Core: 8
2022-11-05 16:54:12,227:INFO:Checking libraries
2022-11-05 16:54:12,227:INFO:System:
2022-11-05 16:54:12,227:INFO:    python: 3.9.13 (main, Oct 13 2022, 21:23:06) [MSC v.1916 64 bit (AMD64)]
2022-11-05 16:54:12,227:INFO:executable: C:\Users\ranji\anaconda3\python.exe
2022-11-05 16:54:12,227:INFO:   machine: Windows-10-10.0.22000-SP0
2022-11-05 16:54:12,227:INFO:PyCaret required dependencies:
2022-11-05 16:54:12,227:INFO:                 pip: 22.2.2
2022-11-05 16:54:12,227:INFO:          setuptools: 65.5.0
2022-11-05 16:54:12,227:INFO:             pycaret: 3.0.0rc4
2022-11-05 16:54:12,227:INFO:             IPython: 7.31.1
2022-11-05 16:54:12,227:INFO:          ipywidgets: 7.6.5
2022-11-05 16:54:12,227:INFO:                tqdm: 4.64.1
2022-11-05 16:54:12,227:INFO:               numpy: 1.21.5
2022-11-05 16:54:12,227:INFO:              pandas: 1.4.4
2022-11-05 16:54:12,227:INFO:              jinja2: 2.11.3
2022-11-05 16:54:12,227:INFO:               scipy: 1.9.3
2022-11-05 16:54:12,227:INFO:              joblib: 1.1.1
2022-11-05 16:54:12,227:INFO:             sklearn: 1.1.3
2022-11-05 16:54:12,227:INFO:                pyod: 1.0.6
2022-11-05 16:54:12,227:INFO:            imblearn: 0.9.1
2022-11-05 16:54:12,227:INFO:   category_encoders: 2.5.1.post0
2022-11-05 16:54:12,227:INFO:            lightgbm: 3.3.3
2022-11-05 16:54:12,227:INFO:               numba: 0.56.3
2022-11-05 16:54:12,227:INFO:            requests: 2.28.1
2022-11-05 16:54:12,227:INFO:          matplotlib: 3.5.3
2022-11-05 16:54:12,227:INFO:          scikitplot: 0.3.7
2022-11-05 16:54:12,227:INFO:         yellowbrick: 1.5
2022-11-05 16:54:12,227:INFO:              plotly: 5.9.0
2022-11-05 16:54:12,227:INFO:             kaleido: 0.2.1
2022-11-05 16:54:12,227:INFO:         statsmodels: 0.13.2
2022-11-05 16:54:12,227:INFO:              sktime: 0.13.4
2022-11-05 16:54:12,227:INFO:               tbats: 1.1.1
2022-11-05 16:54:12,227:INFO:            pmdarima: 1.8.5
2022-11-05 16:54:12,228:INFO:              psutil: 5.9.0
2022-11-05 16:54:12,228:INFO:PyCaret optional dependencies:
2022-11-05 16:54:12,238:INFO:                shap: Not installed
2022-11-05 16:54:12,239:INFO:           interpret: Not installed
2022-11-05 16:54:12,239:INFO:                umap: Not installed
2022-11-05 16:54:12,239:INFO:    pandas_profiling: 3.4.0
2022-11-05 16:54:12,239:INFO:  explainerdashboard: Not installed
2022-11-05 16:54:12,239:INFO:             autoviz: Not installed
2022-11-05 16:54:12,239:INFO:           fairlearn: Not installed
2022-11-05 16:54:12,239:INFO:             xgboost: Not installed
2022-11-05 16:54:12,239:INFO:            catboost: Not installed
2022-11-05 16:54:12,239:INFO:              kmodes: Not installed
2022-11-05 16:54:12,239:INFO:             mlxtend: Not installed
2022-11-05 16:54:12,239:INFO:       statsforecast: Not installed
2022-11-05 16:54:12,239:INFO:        tune_sklearn: Not installed
2022-11-05 16:54:12,239:INFO:                 ray: Not installed
2022-11-05 16:54:12,239:INFO:            hyperopt: Not installed
2022-11-05 16:54:12,239:INFO:              optuna: Not installed
2022-11-05 16:54:12,239:INFO:               skopt: Not installed
2022-11-05 16:54:12,239:INFO:              mlflow: Not installed
2022-11-05 16:54:12,239:INFO:              gradio: Not installed
2022-11-05 16:54:12,239:INFO:             fastapi: Not installed
2022-11-05 16:54:12,239:INFO:             uvicorn: Not installed
2022-11-05 16:54:12,239:INFO:              m2cgen: Not installed
2022-11-05 16:54:12,239:INFO:           evidently: Not installed
2022-11-05 16:54:12,239:INFO:                nltk: 3.7
2022-11-05 16:54:12,239:INFO:            pyLDAvis: Not installed
2022-11-05 16:54:12,240:INFO:              gensim: 4.1.2
2022-11-05 16:54:12,240:INFO:               spacy: Not installed
2022-11-05 16:54:12,240:INFO:           wordcloud: Not installed
2022-11-05 16:54:12,240:INFO:            textblob: Not installed
2022-11-05 16:54:12,240:INFO:               fugue: Not installed
2022-11-05 16:54:12,240:INFO:           streamlit: 1.14.0
2022-11-05 16:54:12,240:INFO:             prophet: Not installed
2022-11-05 16:54:12,240:INFO:None
2022-11-05 16:54:12,240:INFO:Set up data.
2022-11-05 16:54:12,249:INFO:Set up train/test split.
2022-11-05 16:54:12,262:INFO:Set up index.
2022-11-05 16:54:12,263:INFO:Assigning column types.
2022-11-05 16:54:12,265:INFO:Set up folding strategy.
2022-11-05 16:54:12,265:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 16:54:12,303:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,654:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,687:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 16:54:12,732:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:12,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,815:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-05 16:54:12,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:12,940:INFO:Preparing preprocessing pipeline...
2022-11-05 16:54:12,942:INFO:Set up label encoding.
2022-11-05 16:54:12,942:INFO:Set up simple imputation.
2022-11-05 16:54:12,945:INFO:Set up encoding of ordinal features.
2022-11-05 16:54:12,946:INFO:Set up encoding of categorical features.
2022-11-05 16:54:12,946:INFO:Set up variance threshold.
2022-11-05 16:54:13,392:INFO:Finished creating preprocessing pipeline.
2022-11-05 16:54:13,401:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'default...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=8926,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-05 16:54:13,401:INFO:Creating final display dataframe.
2022-11-05 16:54:15,423:INFO:Setup display_container:                     Description                                              Value
0                    Session id                                               8926
1                        Target                                   checking_balance
2                   Target type                                         Multiclass
3                Target mapping  1 - 200 DM: 0, < 0 DM: 1, > 200 DM: 2, unknown: 3
4           Original data shape                                         (1000, 21)
5        Transformed data shape                                         (1000, 48)
6   Transformed train set shape                                          (699, 48)
7    Transformed test set shape                                          (301, 48)
8              Ordinal features                                                  2
9              Numeric features                                                  8
10         Categorical features                                                 12
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                           constant
15     Maximum one-hot encoding                                                  5
16              Encoding method                                               None
17       Low variance threshold                                                  0
18               Fold Generator                                    StratifiedKFold
19                  Fold Number                                                 10
20                     CPU Jobs                                                 -1
21                      Use GPU                                              False
22               Log Experiment                                              False
23              Experiment Name                                   clf-default-name
24                          USI                                               bd55
2022-11-05 16:54:15,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:15,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:15,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:15,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:15,684:INFO:setup() successfully completed in 3.53s...............
2022-11-05 16:54:15,696:INFO:Initializing compare_models()
2022-11-05 16:54:15,696:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-05 16:54:15,696:INFO:Checking exceptions
2022-11-05 16:54:15,701:INFO:Preparing display monitor
2022-11-05 16:54:15,706:INFO:Initializing Logistic Regression
2022-11-05 16:54:15,706:INFO:Total runtime is 0.0 minutes
2022-11-05 16:54:15,706:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:15,706:INFO:Initializing create_model()
2022-11-05 16:54:15,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:15,706:INFO:Checking exceptions
2022-11-05 16:54:15,708:INFO:Importing libraries
2022-11-05 16:54:15,709:INFO:Copying training dataset
2022-11-05 16:54:15,711:INFO:Defining folds
2022-11-05 16:54:15,711:INFO:Declaring metric variables
2022-11-05 16:54:15,712:INFO:Importing untrained model
2022-11-05 16:54:15,713:INFO:Logistic Regression Imported successfully
2022-11-05 16:54:15,713:INFO:Starting cross validation
2022-11-05 16:54:15,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:27,830:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:27,830:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:27,830:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:27,830:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:27,830:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:29,269:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,269:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,269:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,269:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,285:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,315:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 msg_start, len(result))

2022-11-05 16:54:29,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:29,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,351:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,351:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:29,351:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:29,351:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:30,992:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:31,037:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-05 16:54:31,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,916:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,916:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,916:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:31,916:INFO:Calculating mean and std
2022-11-05 16:54:31,916:INFO:Creating metrics dataframe
2022-11-05 16:54:31,932:INFO:Uploading results into container
2022-11-05 16:54:31,932:INFO:Uploading model into container now
2022-11-05 16:54:31,932:INFO:master_model_container: 1
2022-11-05 16:54:31,932:INFO:display_container: 2
2022-11-05 16:54:31,932:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8926, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 16:54:31,932:INFO:create_model() successfully completed......................................
2022-11-05 16:54:32,135:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:32,135:INFO:Creating metrics dataframe
2022-11-05 16:54:32,151:INFO:Initializing K Neighbors Classifier
2022-11-05 16:54:32,151:INFO:Total runtime is 0.27409351666768395 minutes
2022-11-05 16:54:32,151:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:32,151:INFO:Initializing create_model()
2022-11-05 16:54:32,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:32,151:INFO:Checking exceptions
2022-11-05 16:54:32,151:INFO:Importing libraries
2022-11-05 16:54:32,151:INFO:Copying training dataset
2022-11-05 16:54:32,151:INFO:Defining folds
2022-11-05 16:54:32,151:INFO:Declaring metric variables
2022-11-05 16:54:32,151:INFO:Importing untrained model
2022-11-05 16:54:32,158:INFO:K Neighbors Classifier Imported successfully
2022-11-05 16:54:32,158:INFO:Starting cross validation
2022-11-05 16:54:32,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:32,804:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,806:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,807:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,808:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,809:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,810:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,837:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,837:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,837:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:32,837:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,837:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,854:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:32,869:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,496:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,501:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,504:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,511:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,513:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,514:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:33,514:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:33,519:INFO:Calculating mean and std
2022-11-05 16:54:33,519:INFO:Creating metrics dataframe
2022-11-05 16:54:33,519:INFO:Uploading results into container
2022-11-05 16:54:33,519:INFO:Uploading model into container now
2022-11-05 16:54:33,519:INFO:master_model_container: 2
2022-11-05 16:54:33,519:INFO:display_container: 2
2022-11-05 16:54:33,519:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-05 16:54:33,519:INFO:create_model() successfully completed......................................
2022-11-05 16:54:33,713:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:33,713:INFO:Creating metrics dataframe
2022-11-05 16:54:33,729:INFO:Initializing Naive Bayes
2022-11-05 16:54:33,729:INFO:Total runtime is 0.30038931369781496 minutes
2022-11-05 16:54:33,729:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:33,729:INFO:Initializing create_model()
2022-11-05 16:54:33,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:33,729:INFO:Checking exceptions
2022-11-05 16:54:33,729:INFO:Importing libraries
2022-11-05 16:54:33,729:INFO:Copying training dataset
2022-11-05 16:54:33,745:INFO:Defining folds
2022-11-05 16:54:33,745:INFO:Declaring metric variables
2022-11-05 16:54:33,745:INFO:Importing untrained model
2022-11-05 16:54:33,745:INFO:Naive Bayes Imported successfully
2022-11-05 16:54:33,745:INFO:Starting cross validation
2022-11-05 16:54:33,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:34,137:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,137:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,137:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,153:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,153:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,153:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,153:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,170:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,172:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,172:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,172:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,172:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,192:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,196:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,198:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,201:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,201:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,202:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,203:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,203:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,204:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,205:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,206:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,207:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,667:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,667:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,667:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:34,667:INFO:Calculating mean and std
2022-11-05 16:54:34,667:INFO:Creating metrics dataframe
2022-11-05 16:54:34,682:INFO:Uploading results into container
2022-11-05 16:54:34,682:INFO:Uploading model into container now
2022-11-05 16:54:34,682:INFO:master_model_container: 3
2022-11-05 16:54:34,682:INFO:display_container: 2
2022-11-05 16:54:34,682:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-05 16:54:34,682:INFO:create_model() successfully completed......................................
2022-11-05 16:54:34,899:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:34,899:INFO:Creating metrics dataframe
2022-11-05 16:54:34,899:INFO:Initializing Decision Tree Classifier
2022-11-05 16:54:34,899:INFO:Total runtime is 0.3198965628941854 minutes
2022-11-05 16:54:34,899:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:34,899:INFO:Initializing create_model()
2022-11-05 16:54:34,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:34,899:INFO:Checking exceptions
2022-11-05 16:54:34,899:INFO:Importing libraries
2022-11-05 16:54:34,899:INFO:Copying training dataset
2022-11-05 16:54:34,899:INFO:Defining folds
2022-11-05 16:54:34,899:INFO:Declaring metric variables
2022-11-05 16:54:34,899:INFO:Importing untrained model
2022-11-05 16:54:34,899:INFO:Decision Tree Classifier Imported successfully
2022-11-05 16:54:34,899:INFO:Starting cross validation
2022-11-05 16:54:34,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:35,301:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,301:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:35,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:35,329:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,329:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,331:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:35,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,336:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,666:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,666:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,666:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,682:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,682:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,682:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:35,682:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:35,682:INFO:Calculating mean and std
2022-11-05 16:54:35,682:INFO:Creating metrics dataframe
2022-11-05 16:54:35,698:INFO:Uploading results into container
2022-11-05 16:54:35,698:INFO:Uploading model into container now
2022-11-05 16:54:35,698:INFO:master_model_container: 4
2022-11-05 16:54:35,698:INFO:display_container: 2
2022-11-05 16:54:35,698:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8926, splitter='best')
2022-11-05 16:54:35,698:INFO:create_model() successfully completed......................................
2022-11-05 16:54:35,886:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:35,886:INFO:Creating metrics dataframe
2022-11-05 16:54:35,901:INFO:Initializing SVM - Linear Kernel
2022-11-05 16:54:35,901:INFO:Total runtime is 0.3365942160288493 minutes
2022-11-05 16:54:35,901:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:35,901:INFO:Initializing create_model()
2022-11-05 16:54:35,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:35,901:INFO:Checking exceptions
2022-11-05 16:54:35,901:INFO:Importing libraries
2022-11-05 16:54:35,901:INFO:Copying training dataset
2022-11-05 16:54:35,913:INFO:Defining folds
2022-11-05 16:54:35,913:INFO:Declaring metric variables
2022-11-05 16:54:35,914:INFO:Importing untrained model
2022-11-05 16:54:35,914:INFO:SVM - Linear Kernel Imported successfully
2022-11-05 16:54:35,915:INFO:Starting cross validation
2022-11-05 16:54:35,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,259:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,275:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,275:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,290:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,322:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,338:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,742:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,745:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,747:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,749:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,763:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,765:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,766:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:36,767:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:36,773:INFO:Calculating mean and std
2022-11-05 16:54:36,775:INFO:Creating metrics dataframe
2022-11-05 16:54:36,781:INFO:Uploading results into container
2022-11-05 16:54:36,782:INFO:Uploading model into container now
2022-11-05 16:54:36,783:INFO:master_model_container: 5
2022-11-05 16:54:36,783:INFO:display_container: 2
2022-11-05 16:54:36,784:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8926, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-05 16:54:36,784:INFO:create_model() successfully completed......................................
2022-11-05 16:54:36,974:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:36,975:INFO:Creating metrics dataframe
2022-11-05 16:54:36,979:INFO:Initializing Ridge Classifier
2022-11-05 16:54:36,979:INFO:Total runtime is 0.3545528888702393 minutes
2022-11-05 16:54:36,979:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:36,979:INFO:Initializing create_model()
2022-11-05 16:54:36,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:36,980:INFO:Checking exceptions
2022-11-05 16:54:36,981:INFO:Importing libraries
2022-11-05 16:54:36,981:INFO:Copying training dataset
2022-11-05 16:54:36,985:INFO:Defining folds
2022-11-05 16:54:36,985:INFO:Declaring metric variables
2022-11-05 16:54:36,985:INFO:Importing untrained model
2022-11-05 16:54:36,985:INFO:Ridge Classifier Imported successfully
2022-11-05 16:54:36,985:INFO:Starting cross validation
2022-11-05 16:54:36,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,302:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,318:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,321:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,643:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,643:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,643:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,643:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,659:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,674:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,674:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:37,674:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:37,674:INFO:Calculating mean and std
2022-11-05 16:54:37,674:INFO:Creating metrics dataframe
2022-11-05 16:54:37,674:INFO:Uploading results into container
2022-11-05 16:54:37,674:INFO:Uploading model into container now
2022-11-05 16:54:37,674:INFO:master_model_container: 6
2022-11-05 16:54:37,674:INFO:display_container: 2
2022-11-05 16:54:37,674:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8926, solver='auto', tol=0.001)
2022-11-05 16:54:37,674:INFO:create_model() successfully completed......................................
2022-11-05 16:54:37,863:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:37,863:INFO:Creating metrics dataframe
2022-11-05 16:54:37,863:INFO:Initializing Random Forest Classifier
2022-11-05 16:54:37,863:INFO:Total runtime is 0.3692994991938273 minutes
2022-11-05 16:54:37,863:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:37,863:INFO:Initializing create_model()
2022-11-05 16:54:37,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:37,863:INFO:Checking exceptions
2022-11-05 16:54:37,879:INFO:Importing libraries
2022-11-05 16:54:37,879:INFO:Copying training dataset
2022-11-05 16:54:37,879:INFO:Defining folds
2022-11-05 16:54:37,879:INFO:Declaring metric variables
2022-11-05 16:54:37,879:INFO:Importing untrained model
2022-11-05 16:54:37,879:INFO:Random Forest Classifier Imported successfully
2022-11-05 16:54:37,879:INFO:Starting cross validation
2022-11-05 16:54:37,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:38,780:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,789:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,794:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:38,800:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,802:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,803:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,807:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:38,810:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,841:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,846:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,851:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:38,853:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,899:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,907:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,910:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,912:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,919:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,922:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:38,924:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,932:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,932:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:38,932:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:38,949:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,064:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,064:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,080:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,125:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,125:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,125:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:39,125:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,769:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,772:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,774:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 msg_start, len(result))

2022-11-05 16:54:39,776:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,778:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,779:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:39,780:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:39,786:INFO:Calculating mean and std
2022-11-05 16:54:39,786:INFO:Creating metrics dataframe
2022-11-05 16:54:39,791:INFO:Uploading results into container
2022-11-05 16:54:39,792:INFO:Uploading model into container now
2022-11-05 16:54:39,793:INFO:master_model_container: 7
2022-11-05 16:54:39,793:INFO:display_container: 2
2022-11-05 16:54:39,794:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8926, verbose=0, warm_start=False)
2022-11-05 16:54:39,794:INFO:create_model() successfully completed......................................
2022-11-05 16:54:39,985:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:39,985:INFO:Creating metrics dataframe
2022-11-05 16:54:39,996:INFO:Initializing Quadratic Discriminant Analysis
2022-11-05 16:54:39,997:INFO:Total runtime is 0.4048598845799764 minutes
2022-11-05 16:54:39,997:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:39,998:INFO:Initializing create_model()
2022-11-05 16:54:39,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:39,998:INFO:Checking exceptions
2022-11-05 16:54:40,002:INFO:Importing libraries
2022-11-05 16:54:40,002:INFO:Copying training dataset
2022-11-05 16:54:40,002:INFO:Defining folds
2022-11-05 16:54:40,002:INFO:Declaring metric variables
2022-11-05 16:54:40,002:INFO:Importing untrained model
2022-11-05 16:54:40,002:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-05 16:54:40,002:INFO:Starting cross validation
2022-11-05 16:54:40,002:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,281:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,460:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,460:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,460:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,460:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,476:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,476:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,476:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,476:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 msg_start, len(result))

2022-11-05 16:54:40,476:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,491:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,508:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,509:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,509:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,510:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,510:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,510:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,510:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,513:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,515:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,515:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,515:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,525:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,701:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,717:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:54:40,954:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,954:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,954:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,954:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,973:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,975:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,976:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:40,977:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:40,981:INFO:Calculating mean and std
2022-11-05 16:54:40,982:INFO:Creating metrics dataframe
2022-11-05 16:54:40,988:INFO:Uploading results into container
2022-11-05 16:54:40,989:INFO:Uploading model into container now
2022-11-05 16:54:40,990:INFO:master_model_container: 8
2022-11-05 16:54:40,990:INFO:display_container: 2
2022-11-05 16:54:40,990:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-05 16:54:40,990:INFO:create_model() successfully completed......................................
2022-11-05 16:54:41,178:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:41,179:INFO:Creating metrics dataframe
2022-11-05 16:54:41,186:INFO:Initializing Ada Boost Classifier
2022-11-05 16:54:41,186:INFO:Total runtime is 0.42466980616251626 minutes
2022-11-05 16:54:41,187:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:41,187:INFO:Initializing create_model()
2022-11-05 16:54:41,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:41,187:INFO:Checking exceptions
2022-11-05 16:54:41,189:INFO:Importing libraries
2022-11-05 16:54:41,189:INFO:Copying training dataset
2022-11-05 16:54:41,196:INFO:Defining folds
2022-11-05 16:54:41,196:INFO:Declaring metric variables
2022-11-05 16:54:41,196:INFO:Importing untrained model
2022-11-05 16:54:41,196:INFO:Ada Boost Classifier Imported successfully
2022-11-05 16:54:41,196:INFO:Starting cross validation
2022-11-05 16:54:41,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:41,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,778:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,780:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,783:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,788:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,789:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,791:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,816:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,818:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,818:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,818:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,818:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,818:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,828:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,844:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,845:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,866:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,866:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:41,866:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,363:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,363:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,365:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,365:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,366:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,366:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:42,368:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:42,372:INFO:Calculating mean and std
2022-11-05 16:54:42,373:INFO:Creating metrics dataframe
2022-11-05 16:54:42,379:INFO:Uploading results into container
2022-11-05 16:54:42,380:INFO:Uploading model into container now
2022-11-05 16:54:42,380:INFO:master_model_container: 9
2022-11-05 16:54:42,380:INFO:display_container: 2
2022-11-05 16:54:42,381:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8926)
2022-11-05 16:54:42,381:INFO:create_model() successfully completed......................................
2022-11-05 16:54:42,569:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:42,569:INFO:Creating metrics dataframe
2022-11-05 16:54:42,574:INFO:Initializing Gradient Boosting Classifier
2022-11-05 16:54:42,574:INFO:Total runtime is 0.4478052457173665 minutes
2022-11-05 16:54:42,574:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:42,575:INFO:Initializing create_model()
2022-11-05 16:54:42,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:42,575:INFO:Checking exceptions
2022-11-05 16:54:42,576:INFO:Importing libraries
2022-11-05 16:54:42,576:INFO:Copying training dataset
2022-11-05 16:54:42,584:INFO:Defining folds
2022-11-05 16:54:42,584:INFO:Declaring metric variables
2022-11-05 16:54:42,584:INFO:Importing untrained model
2022-11-05 16:54:42,585:INFO:Gradient Boosting Classifier Imported successfully
2022-11-05 16:54:42,585:INFO:Starting cross validation
2022-11-05 16:54:42,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:44,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:44,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,298:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,298:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,298:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,317:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,317:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,317:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,673:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,673:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,673:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:44,673:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,706:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,706:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,706:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,807:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,808:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,809:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,849:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,849:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,849:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:44,849:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,880:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,880:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:44,880:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:44,880:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,803:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,805:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,806:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,833:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,833:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,833:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:45,850:INFO:Calculating mean and std
2022-11-05 16:54:45,850:INFO:Creating metrics dataframe
2022-11-05 16:54:45,850:INFO:Uploading results into container
2022-11-05 16:54:45,850:INFO:Uploading model into container now
2022-11-05 16:54:45,850:INFO:master_model_container: 10
2022-11-05 16:54:45,850:INFO:display_container: 2
2022-11-05 16:54:45,850:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8926, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-05 16:54:45,850:INFO:create_model() successfully completed......................................
2022-11-05 16:54:46,076:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:46,076:INFO:Creating metrics dataframe
2022-11-05 16:54:46,093:INFO:Initializing Linear Discriminant Analysis
2022-11-05 16:54:46,093:INFO:Total runtime is 0.506454066435496 minutes
2022-11-05 16:54:46,093:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:46,093:INFO:Initializing create_model()
2022-11-05 16:54:46,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:46,093:INFO:Checking exceptions
2022-11-05 16:54:46,093:INFO:Importing libraries
2022-11-05 16:54:46,093:INFO:Copying training dataset
2022-11-05 16:54:46,093:INFO:Defining folds
2022-11-05 16:54:46,093:INFO:Declaring metric variables
2022-11-05 16:54:46,093:INFO:Importing untrained model
2022-11-05 16:54:46,093:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 16:54:46,093:INFO:Starting cross validation
2022-11-05 16:54:46,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:46,499:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,499:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,499:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,517:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,517:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,534:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:46,534:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,548:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,548:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,548:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,579:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,580:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,581:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,667:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,668:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:46,668:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,668:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,668:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,668:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,683:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:46,683:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,715:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,715:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,730:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,896:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,896:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,896:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,943:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,943:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,943:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:46,943:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:46,960:INFO:Calculating mean and std
2022-11-05 16:54:46,961:INFO:Creating metrics dataframe
2022-11-05 16:54:46,968:INFO:Uploading results into container
2022-11-05 16:54:46,969:INFO:Uploading model into container now
2022-11-05 16:54:46,969:INFO:master_model_container: 11
2022-11-05 16:54:46,969:INFO:display_container: 2
2022-11-05 16:54:46,970:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 16:54:46,970:INFO:create_model() successfully completed......................................
2022-11-05 16:54:47,171:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:47,171:INFO:Creating metrics dataframe
2022-11-05 16:54:47,177:INFO:Initializing Extra Trees Classifier
2022-11-05 16:54:47,177:INFO:Total runtime is 0.5245254357655843 minutes
2022-11-05 16:54:47,177:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:47,177:INFO:Initializing create_model()
2022-11-05 16:54:47,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:47,177:INFO:Checking exceptions
2022-11-05 16:54:47,181:INFO:Importing libraries
2022-11-05 16:54:47,181:INFO:Copying training dataset
2022-11-05 16:54:47,188:INFO:Defining folds
2022-11-05 16:54:47,188:INFO:Declaring metric variables
2022-11-05 16:54:47,189:INFO:Importing untrained model
2022-11-05 16:54:47,189:INFO:Extra Trees Classifier Imported successfully
2022-11-05 16:54:47,189:INFO:Starting cross validation
2022-11-05 16:54:47,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:47,937:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,937:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,937:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,955:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,955:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,963:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:47,965:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,970:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,978:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,978:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,979:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:47,981:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,981:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:47,982:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:47,984:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,015:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,018:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,065:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,065:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,065:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,188:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,191:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,192:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:48,194:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,844:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,847:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,852:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,853:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,853:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,853:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:48,853:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:48,853:INFO:Calculating mean and std
2022-11-05 16:54:48,869:INFO:Creating metrics dataframe
2022-11-05 16:54:48,869:INFO:Uploading results into container
2022-11-05 16:54:48,879:INFO:Uploading model into container now
2022-11-05 16:54:48,879:INFO:master_model_container: 12
2022-11-05 16:54:48,879:INFO:display_container: 2
2022-11-05 16:54:48,879:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8926, verbose=0, warm_start=False)
2022-11-05 16:54:48,879:INFO:create_model() successfully completed......................................
2022-11-05 16:54:49,128:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:49,128:INFO:Creating metrics dataframe
2022-11-05 16:54:49,135:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 16:54:49,135:INFO:Total runtime is 0.5571652770042419 minutes
2022-11-05 16:54:49,135:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:49,135:INFO:Initializing create_model()
2022-11-05 16:54:49,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:49,135:INFO:Checking exceptions
2022-11-05 16:54:49,135:INFO:Importing libraries
2022-11-05 16:54:49,135:INFO:Copying training dataset
2022-11-05 16:54:49,144:INFO:Defining folds
2022-11-05 16:54:49,144:INFO:Declaring metric variables
2022-11-05 16:54:49,144:INFO:Importing untrained model
2022-11-05 16:54:49,144:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 16:54:49,144:INFO:Starting cross validation
2022-11-05 16:54:49,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:53,618:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,621:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,623:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:53,625:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,645:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,648:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,651:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,660:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,662:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,664:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:53,665:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,671:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,674:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,676:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,685:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,685:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,689:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,689:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,693:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,696:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,799:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,801:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,802:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:53,802:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,953:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,953:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:53,953:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,680:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,680:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,680:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,680:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,696:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,696:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:54,696:INFO:Calculating mean and std
2022-11-05 16:54:54,696:INFO:Creating metrics dataframe
2022-11-05 16:54:54,696:INFO:Uploading results into container
2022-11-05 16:54:54,696:INFO:Uploading model into container now
2022-11-05 16:54:54,696:INFO:master_model_container: 13
2022-11-05 16:54:54,696:INFO:display_container: 2
2022-11-05 16:54:54,696:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8926, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-05 16:54:54,696:INFO:create_model() successfully completed......................................
2022-11-05 16:54:54,920:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:54,920:INFO:Creating metrics dataframe
2022-11-05 16:54:54,925:INFO:Initializing Dummy Classifier
2022-11-05 16:54:54,925:INFO:Total runtime is 0.6536651571591695 minutes
2022-11-05 16:54:54,925:INFO:SubProcess create_model() called ==================================
2022-11-05 16:54:54,926:INFO:Initializing create_model()
2022-11-05 16:54:54,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FDD05E80>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:54,926:INFO:Checking exceptions
2022-11-05 16:54:54,927:INFO:Importing libraries
2022-11-05 16:54:54,928:INFO:Copying training dataset
2022-11-05 16:54:54,931:INFO:Defining folds
2022-11-05 16:54:54,931:INFO:Declaring metric variables
2022-11-05 16:54:54,931:INFO:Importing untrained model
2022-11-05 16:54:54,931:INFO:Dummy Classifier Imported successfully
2022-11-05 16:54:54,932:INFO:Starting cross validation
2022-11-05 16:54:54,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:54:55,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,266:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,299:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,299:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,299:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,299:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,316:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,333:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,351:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,367:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,369:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,370:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,378:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,380:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,381:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,383:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,384:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,384:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,384:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,384:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,384:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,387:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,389:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,391:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,740:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,740:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,749:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,749:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,796:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,798:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,799:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:54:55,800:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'unknown') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-05 16:54:55,804:INFO:Calculating mean and std
2022-11-05 16:54:55,806:INFO:Creating metrics dataframe
2022-11-05 16:54:55,814:INFO:Uploading results into container
2022-11-05 16:54:55,815:INFO:Uploading model into container now
2022-11-05 16:54:55,815:INFO:master_model_container: 14
2022-11-05 16:54:55,816:INFO:display_container: 2
2022-11-05 16:54:55,816:INFO:DummyClassifier(constant=None, random_state=8926, strategy='prior')
2022-11-05 16:54:55,816:INFO:create_model() successfully completed......................................
2022-11-05 16:54:56,031:INFO:SubProcess create_model() end ==================================
2022-11-05 16:54:56,031:INFO:Creating metrics dataframe
2022-11-05 16:54:56,031:INFO:Initializing create_model()
2022-11-05 16:54:56,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFAB21C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8926, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:54:56,031:INFO:Checking exceptions
2022-11-05 16:54:56,049:INFO:Importing libraries
2022-11-05 16:54:56,049:INFO:Copying training dataset
2022-11-05 16:54:56,050:INFO:Defining folds
2022-11-05 16:54:56,050:INFO:Declaring metric variables
2022-11-05 16:54:56,050:INFO:Importing untrained model
2022-11-05 16:54:56,050:INFO:Declaring custom model
2022-11-05 16:54:56,050:INFO:Random Forest Classifier Imported successfully
2022-11-05 16:54:56,050:INFO:Cross validation set to False
2022-11-05 16:54:56,050:INFO:Fitting Model
2022-11-05 16:54:56,738:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8926, verbose=0, warm_start=False)
2022-11-05 16:54:56,739:INFO:create_model() successfully completed......................................
2022-11-05 16:54:56,955:INFO:master_model_container: 14
2022-11-05 16:54:56,956:INFO:display_container: 2
2022-11-05 16:54:56,956:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8926, verbose=0, warm_start=False)
2022-11-05 16:54:56,956:INFO:compare_models() successfully completed......................................
2022-11-05 16:54:57,199:INFO:PyCaret ClassificationExperiment
2022-11-05 16:54:57,199:INFO:Logging name: clf-default-name
2022-11-05 16:54:57,199:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-05 16:54:57,199:INFO:version 3.0.0.rc4
2022-11-05 16:54:57,199:INFO:Initializing setup()
2022-11-05 16:54:57,199:INFO:self.USI: 2d35
2022-11-05 16:54:57,199:INFO:self.variable_keys: {'memory', 'exp_name_log', 'gpu_param', 'USI', 'pipeline', '_available_plots', '_is_multiclass', 'X_train', '_gpu_n_jobs_param', 'n_jobs_param', 'master_model_container', 'y_test', 'fix_imbalance', '_all_models', 'y_train', 'fold_groups_param', '_all_metrics', 'exp_id', '_ml_usecase', 'data', 'X', 'fold_shuffle_param', 'fold_generator', 'display_container', 'log_plots_param', 'logging_param', 'X_test', 'html_param', 'variable_keys', 'target_param', 'y', 'seed', '_all_models_internal', 'idx'}
2022-11-05 16:54:57,199:INFO:Checking environment
2022-11-05 16:54:57,199:INFO:python_version: 3.9.13
2022-11-05 16:54:57,199:INFO:python_build: ('main', 'Oct 13 2022 21:23:06')
2022-11-05 16:54:57,199:INFO:machine: AMD64
2022-11-05 16:54:57,199:INFO:platform: Windows-10-10.0.22000-SP0
2022-11-05 16:54:57,199:INFO:Memory: svmem(total=8277590016, available=1312047104, percent=84.1, used=6965542912, free=1312047104)
2022-11-05 16:54:57,199:INFO:Physical Core: 4
2022-11-05 16:54:57,199:INFO:Logical Core: 8
2022-11-05 16:54:57,199:INFO:Checking libraries
2022-11-05 16:54:57,199:INFO:System:
2022-11-05 16:54:57,199:INFO:    python: 3.9.13 (main, Oct 13 2022, 21:23:06) [MSC v.1916 64 bit (AMD64)]
2022-11-05 16:54:57,199:INFO:executable: C:\Users\ranji\anaconda3\python.exe
2022-11-05 16:54:57,199:INFO:   machine: Windows-10-10.0.22000-SP0
2022-11-05 16:54:57,199:INFO:PyCaret required dependencies:
2022-11-05 16:54:57,199:INFO:                 pip: 22.2.2
2022-11-05 16:54:57,199:INFO:          setuptools: 65.5.0
2022-11-05 16:54:57,199:INFO:             pycaret: 3.0.0rc4
2022-11-05 16:54:57,199:INFO:             IPython: 7.31.1
2022-11-05 16:54:57,199:INFO:          ipywidgets: 7.6.5
2022-11-05 16:54:57,199:INFO:                tqdm: 4.64.1
2022-11-05 16:54:57,199:INFO:               numpy: 1.21.5
2022-11-05 16:54:57,199:INFO:              pandas: 1.4.4
2022-11-05 16:54:57,199:INFO:              jinja2: 2.11.3
2022-11-05 16:54:57,199:INFO:               scipy: 1.9.3
2022-11-05 16:54:57,199:INFO:              joblib: 1.1.1
2022-11-05 16:54:57,199:INFO:             sklearn: 1.1.3
2022-11-05 16:54:57,199:INFO:                pyod: 1.0.6
2022-11-05 16:54:57,199:INFO:            imblearn: 0.9.1
2022-11-05 16:54:57,199:INFO:   category_encoders: 2.5.1.post0
2022-11-05 16:54:57,199:INFO:            lightgbm: 3.3.3
2022-11-05 16:54:57,199:INFO:               numba: 0.56.3
2022-11-05 16:54:57,199:INFO:            requests: 2.28.1
2022-11-05 16:54:57,199:INFO:          matplotlib: 3.5.3
2022-11-05 16:54:57,199:INFO:          scikitplot: 0.3.7
2022-11-05 16:54:57,199:INFO:         yellowbrick: 1.5
2022-11-05 16:54:57,215:INFO:              plotly: 5.9.0
2022-11-05 16:54:57,215:INFO:             kaleido: 0.2.1
2022-11-05 16:54:57,215:INFO:         statsmodels: 0.13.2
2022-11-05 16:54:57,215:INFO:              sktime: 0.13.4
2022-11-05 16:54:57,215:INFO:               tbats: 1.1.1
2022-11-05 16:54:57,215:INFO:            pmdarima: 1.8.5
2022-11-05 16:54:57,215:INFO:              psutil: 5.9.0
2022-11-05 16:54:57,215:INFO:PyCaret optional dependencies:
2022-11-05 16:54:57,215:INFO:                shap: Not installed
2022-11-05 16:54:57,215:INFO:           interpret: Not installed
2022-11-05 16:54:57,215:INFO:                umap: Not installed
2022-11-05 16:54:57,215:INFO:    pandas_profiling: 3.4.0
2022-11-05 16:54:57,215:INFO:  explainerdashboard: Not installed
2022-11-05 16:54:57,215:INFO:             autoviz: Not installed
2022-11-05 16:54:57,215:INFO:           fairlearn: Not installed
2022-11-05 16:54:57,215:INFO:             xgboost: Not installed
2022-11-05 16:54:57,215:INFO:            catboost: Not installed
2022-11-05 16:54:57,215:INFO:              kmodes: Not installed
2022-11-05 16:54:57,215:INFO:             mlxtend: Not installed
2022-11-05 16:54:57,215:INFO:       statsforecast: Not installed
2022-11-05 16:54:57,215:INFO:        tune_sklearn: Not installed
2022-11-05 16:54:57,215:INFO:                 ray: Not installed
2022-11-05 16:54:57,215:INFO:            hyperopt: Not installed
2022-11-05 16:54:57,215:INFO:              optuna: Not installed
2022-11-05 16:54:57,215:INFO:               skopt: Not installed
2022-11-05 16:54:57,215:INFO:              mlflow: Not installed
2022-11-05 16:54:57,215:INFO:              gradio: Not installed
2022-11-05 16:54:57,215:INFO:             fastapi: Not installed
2022-11-05 16:54:57,215:INFO:             uvicorn: Not installed
2022-11-05 16:54:57,215:INFO:              m2cgen: Not installed
2022-11-05 16:54:57,215:INFO:           evidently: Not installed
2022-11-05 16:54:57,215:INFO:                nltk: 3.7
2022-11-05 16:54:57,215:INFO:            pyLDAvis: Not installed
2022-11-05 16:54:57,215:INFO:              gensim: 4.1.2
2022-11-05 16:54:57,215:INFO:               spacy: Not installed
2022-11-05 16:54:57,215:INFO:           wordcloud: Not installed
2022-11-05 16:54:57,215:INFO:            textblob: Not installed
2022-11-05 16:54:57,215:INFO:               fugue: Not installed
2022-11-05 16:54:57,215:INFO:           streamlit: 1.14.0
2022-11-05 16:54:57,215:INFO:             prophet: Not installed
2022-11-05 16:54:57,215:INFO:None
2022-11-05 16:54:57,215:INFO:Set up data.
2022-11-05 16:54:57,246:INFO:Set up train/test split.
2022-11-05 16:54:57,271:INFO:Set up index.
2022-11-05 16:54:57,272:INFO:Assigning column types.
2022-11-05 16:54:57,281:INFO:Set up folding strategy.
2022-11-05 16:54:57,281:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 16:54:57,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,477:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 16:54:57,526:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,617:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:54:57,668:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,685:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-05 16:54:57,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:54:57,942:INFO:Preparing preprocessing pipeline...
2022-11-05 16:54:57,942:INFO:Set up label encoding.
2022-11-05 16:54:57,942:INFO:Set up simple imputation.
2022-11-05 16:54:57,961:INFO:Set up encoding of ordinal features.
2022-11-05 16:54:57,965:INFO:Set up encoding of categorical features.
2022-11-05 16:54:57,965:INFO:Set up variance threshold.
2022-11-05 16:54:58,738:INFO:Finished creating preprocessing pipeline.
2022-11-05 16:54:58,755:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=5007,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-05 16:54:58,757:INFO:Creating final display dataframe.
2022-11-05 16:55:01,264:INFO:Setup display_container:                     Description             Value
0                    Session id              5007
1                        Target           default
2                   Target type            Binary
3                Target mapping        1: 0, 2: 1
4           Original data shape        (1000, 21)
5        Transformed data shape        (1000, 51)
6   Transformed train set shape         (699, 51)
7    Transformed test set shape         (301, 51)
8              Ordinal features                 2
9              Numeric features                 7
10         Categorical features                13
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation          constant
15     Maximum one-hot encoding                 5
16              Encoding method              None
17       Low variance threshold                 0
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              2d35
2022-11-05 16:55:01,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:01,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:01,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:01,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:01,632:INFO:setup() successfully completed in 4.43s...............
2022-11-05 16:55:01,648:INFO:Initializing compare_models()
2022-11-05 16:55:01,648:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-05 16:55:01,648:INFO:Checking exceptions
2022-11-05 16:55:01,648:INFO:Preparing display monitor
2022-11-05 16:55:01,664:INFO:Initializing Logistic Regression
2022-11-05 16:55:01,664:INFO:Total runtime is 0.0 minutes
2022-11-05 16:55:01,664:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:01,664:INFO:Initializing create_model()
2022-11-05 16:55:01,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:01,664:INFO:Checking exceptions
2022-11-05 16:55:01,664:INFO:Importing libraries
2022-11-05 16:55:01,664:INFO:Copying training dataset
2022-11-05 16:55:01,664:INFO:Defining folds
2022-11-05 16:55:01,664:INFO:Declaring metric variables
2022-11-05 16:55:01,664:INFO:Importing untrained model
2022-11-05 16:55:01,664:INFO:Logistic Regression Imported successfully
2022-11-05 16:55:01,664:INFO:Starting cross validation
2022-11-05 16:55:01,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:06,479:INFO:Calculating mean and std
2022-11-05 16:55:06,479:INFO:Creating metrics dataframe
2022-11-05 16:55:06,495:INFO:Uploading results into container
2022-11-05 16:55:06,495:INFO:Uploading model into container now
2022-11-05 16:55:06,495:INFO:master_model_container: 1
2022-11-05 16:55:06,495:INFO:display_container: 2
2022-11-05 16:55:06,495:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5007, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 16:55:06,495:INFO:create_model() successfully completed......................................
2022-11-05 16:55:06,719:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:06,720:INFO:Creating metrics dataframe
2022-11-05 16:55:06,724:INFO:Initializing K Neighbors Classifier
2022-11-05 16:55:06,724:INFO:Total runtime is 0.08434759378433228 minutes
2022-11-05 16:55:06,724:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:06,725:INFO:Initializing create_model()
2022-11-05 16:55:06,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:06,725:INFO:Checking exceptions
2022-11-05 16:55:06,727:INFO:Importing libraries
2022-11-05 16:55:06,727:INFO:Copying training dataset
2022-11-05 16:55:06,730:INFO:Defining folds
2022-11-05 16:55:06,731:INFO:Declaring metric variables
2022-11-05 16:55:06,731:INFO:Importing untrained model
2022-11-05 16:55:06,732:INFO:K Neighbors Classifier Imported successfully
2022-11-05 16:55:06,732:INFO:Starting cross validation
2022-11-05 16:55:06,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:08,199:INFO:Calculating mean and std
2022-11-05 16:55:08,200:INFO:Creating metrics dataframe
2022-11-05 16:55:08,205:INFO:Uploading results into container
2022-11-05 16:55:08,206:INFO:Uploading model into container now
2022-11-05 16:55:08,207:INFO:master_model_container: 2
2022-11-05 16:55:08,207:INFO:display_container: 2
2022-11-05 16:55:08,208:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-05 16:55:08,208:INFO:create_model() successfully completed......................................
2022-11-05 16:55:08,415:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:08,415:INFO:Creating metrics dataframe
2022-11-05 16:55:08,431:INFO:Initializing Naive Bayes
2022-11-05 16:55:08,431:INFO:Total runtime is 0.11278727451960247 minutes
2022-11-05 16:55:08,431:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:08,431:INFO:Initializing create_model()
2022-11-05 16:55:08,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:08,431:INFO:Checking exceptions
2022-11-05 16:55:08,431:INFO:Importing libraries
2022-11-05 16:55:08,431:INFO:Copying training dataset
2022-11-05 16:55:08,431:INFO:Defining folds
2022-11-05 16:55:08,431:INFO:Declaring metric variables
2022-11-05 16:55:08,447:INFO:Importing untrained model
2022-11-05 16:55:08,447:INFO:Naive Bayes Imported successfully
2022-11-05 16:55:08,447:INFO:Starting cross validation
2022-11-05 16:55:08,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:09,381:INFO:Calculating mean and std
2022-11-05 16:55:09,382:INFO:Creating metrics dataframe
2022-11-05 16:55:09,389:INFO:Uploading results into container
2022-11-05 16:55:09,390:INFO:Uploading model into container now
2022-11-05 16:55:09,391:INFO:master_model_container: 3
2022-11-05 16:55:09,391:INFO:display_container: 2
2022-11-05 16:55:09,392:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-05 16:55:09,392:INFO:create_model() successfully completed......................................
2022-11-05 16:55:09,614:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:09,614:INFO:Creating metrics dataframe
2022-11-05 16:55:09,614:INFO:Initializing Decision Tree Classifier
2022-11-05 16:55:09,614:INFO:Total runtime is 0.13251033226648967 minutes
2022-11-05 16:55:09,614:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:09,614:INFO:Initializing create_model()
2022-11-05 16:55:09,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:09,614:INFO:Checking exceptions
2022-11-05 16:55:09,630:INFO:Importing libraries
2022-11-05 16:55:09,630:INFO:Copying training dataset
2022-11-05 16:55:09,630:INFO:Defining folds
2022-11-05 16:55:09,630:INFO:Declaring metric variables
2022-11-05 16:55:09,630:INFO:Importing untrained model
2022-11-05 16:55:09,630:INFO:Decision Tree Classifier Imported successfully
2022-11-05 16:55:09,630:INFO:Starting cross validation
2022-11-05 16:55:09,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:10,080:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:10,583:INFO:Calculating mean and std
2022-11-05 16:55:10,584:INFO:Creating metrics dataframe
2022-11-05 16:55:10,590:INFO:Uploading results into container
2022-11-05 16:55:10,591:INFO:Uploading model into container now
2022-11-05 16:55:10,592:INFO:master_model_container: 4
2022-11-05 16:55:10,592:INFO:display_container: 2
2022-11-05 16:55:10,593:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5007, splitter='best')
2022-11-05 16:55:10,593:INFO:create_model() successfully completed......................................
2022-11-05 16:55:10,815:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:10,815:INFO:Creating metrics dataframe
2022-11-05 16:55:10,831:INFO:Initializing SVM - Linear Kernel
2022-11-05 16:55:10,831:INFO:Total runtime is 0.1527828613917033 minutes
2022-11-05 16:55:10,831:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:10,831:INFO:Initializing create_model()
2022-11-05 16:55:10,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:10,831:INFO:Checking exceptions
2022-11-05 16:55:10,831:INFO:Importing libraries
2022-11-05 16:55:10,831:INFO:Copying training dataset
2022-11-05 16:55:10,831:INFO:Defining folds
2022-11-05 16:55:10,831:INFO:Declaring metric variables
2022-11-05 16:55:10,831:INFO:Importing untrained model
2022-11-05 16:55:10,831:INFO:SVM - Linear Kernel Imported successfully
2022-11-05 16:55:10,831:INFO:Starting cross validation
2022-11-05 16:55:10,846:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:11,177:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,186:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,191:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,199:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,231:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,232:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,555:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,589:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:11,595:INFO:Calculating mean and std
2022-11-05 16:55:11,597:INFO:Creating metrics dataframe
2022-11-05 16:55:11,597:INFO:Uploading results into container
2022-11-05 16:55:11,597:INFO:Uploading model into container now
2022-11-05 16:55:11,597:INFO:master_model_container: 5
2022-11-05 16:55:11,597:INFO:display_container: 2
2022-11-05 16:55:11,597:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5007, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-05 16:55:11,597:INFO:create_model() successfully completed......................................
2022-11-05 16:55:11,813:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:11,813:INFO:Creating metrics dataframe
2022-11-05 16:55:11,829:INFO:Initializing Ridge Classifier
2022-11-05 16:55:11,829:INFO:Total runtime is 0.16942065954208374 minutes
2022-11-05 16:55:11,829:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:11,829:INFO:Initializing create_model()
2022-11-05 16:55:11,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:11,829:INFO:Checking exceptions
2022-11-05 16:55:11,829:INFO:Importing libraries
2022-11-05 16:55:11,829:INFO:Copying training dataset
2022-11-05 16:55:11,829:INFO:Defining folds
2022-11-05 16:55:11,829:INFO:Declaring metric variables
2022-11-05 16:55:11,829:INFO:Importing untrained model
2022-11-05 16:55:11,844:INFO:Ridge Classifier Imported successfully
2022-11-05 16:55:11,844:INFO:Starting cross validation
2022-11-05 16:55:11,844:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:12,530:INFO:Calculating mean and std
2022-11-05 16:55:12,532:INFO:Creating metrics dataframe
2022-11-05 16:55:12,537:INFO:Uploading results into container
2022-11-05 16:55:12,538:INFO:Uploading model into container now
2022-11-05 16:55:12,538:INFO:master_model_container: 6
2022-11-05 16:55:12,538:INFO:display_container: 2
2022-11-05 16:55:12,539:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5007, solver='auto', tol=0.001)
2022-11-05 16:55:12,539:INFO:create_model() successfully completed......................................
2022-11-05 16:55:12,746:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:12,746:INFO:Creating metrics dataframe
2022-11-05 16:55:12,746:INFO:Initializing Random Forest Classifier
2022-11-05 16:55:12,746:INFO:Total runtime is 0.18471300601959229 minutes
2022-11-05 16:55:12,746:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:12,746:INFO:Initializing create_model()
2022-11-05 16:55:12,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:12,746:INFO:Checking exceptions
2022-11-05 16:55:12,746:INFO:Importing libraries
2022-11-05 16:55:12,746:INFO:Copying training dataset
2022-11-05 16:55:12,746:INFO:Defining folds
2022-11-05 16:55:12,746:INFO:Declaring metric variables
2022-11-05 16:55:12,746:INFO:Importing untrained model
2022-11-05 16:55:12,764:INFO:Random Forest Classifier Imported successfully
2022-11-05 16:55:12,764:INFO:Starting cross validation
2022-11-05 16:55:12,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:14,714:INFO:Calculating mean and std
2022-11-05 16:55:14,714:INFO:Creating metrics dataframe
2022-11-05 16:55:14,714:INFO:Uploading results into container
2022-11-05 16:55:14,714:INFO:Uploading model into container now
2022-11-05 16:55:14,714:INFO:master_model_container: 7
2022-11-05 16:55:14,714:INFO:display_container: 2
2022-11-05 16:55:14,714:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5007, verbose=0, warm_start=False)
2022-11-05 16:55:14,714:INFO:create_model() successfully completed......................................
2022-11-05 16:55:14,909:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:14,909:INFO:Creating metrics dataframe
2022-11-05 16:55:14,909:INFO:Initializing Quadratic Discriminant Analysis
2022-11-05 16:55:14,925:INFO:Total runtime is 0.22102205355962118 minutes
2022-11-05 16:55:14,925:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:14,925:INFO:Initializing create_model()
2022-11-05 16:55:14,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:14,925:INFO:Checking exceptions
2022-11-05 16:55:14,928:INFO:Importing libraries
2022-11-05 16:55:14,928:INFO:Copying training dataset
2022-11-05 16:55:14,928:INFO:Defining folds
2022-11-05 16:55:14,928:INFO:Declaring metric variables
2022-11-05 16:55:14,928:INFO:Importing untrained model
2022-11-05 16:55:14,928:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-05 16:55:14,928:INFO:Starting cross validation
2022-11-05 16:55:14,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:15,198:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,205:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,214:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,230:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,676:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,691:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:15,860:INFO:Calculating mean and std
2022-11-05 16:55:15,875:INFO:Creating metrics dataframe
2022-11-05 16:55:15,875:INFO:Uploading results into container
2022-11-05 16:55:15,875:INFO:Uploading model into container now
2022-11-05 16:55:15,875:INFO:master_model_container: 8
2022-11-05 16:55:15,875:INFO:display_container: 2
2022-11-05 16:55:15,875:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-05 16:55:15,875:INFO:create_model() successfully completed......................................
2022-11-05 16:55:16,041:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:16,041:INFO:Creating metrics dataframe
2022-11-05 16:55:16,045:INFO:Initializing Ada Boost Classifier
2022-11-05 16:55:16,045:INFO:Total runtime is 0.2396843473116557 minutes
2022-11-05 16:55:16,045:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:16,046:INFO:Initializing create_model()
2022-11-05 16:55:16,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:16,046:INFO:Checking exceptions
2022-11-05 16:55:16,047:INFO:Importing libraries
2022-11-05 16:55:16,047:INFO:Copying training dataset
2022-11-05 16:55:16,050:INFO:Defining folds
2022-11-05 16:55:16,050:INFO:Declaring metric variables
2022-11-05 16:55:16,051:INFO:Importing untrained model
2022-11-05 16:55:16,051:INFO:Ada Boost Classifier Imported successfully
2022-11-05 16:55:16,051:INFO:Starting cross validation
2022-11-05 16:55:16,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:16,642:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:17,213:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:17,229:INFO:Calculating mean and std
2022-11-05 16:55:17,229:INFO:Creating metrics dataframe
2022-11-05 16:55:17,229:INFO:Uploading results into container
2022-11-05 16:55:17,229:INFO:Uploading model into container now
2022-11-05 16:55:17,229:INFO:master_model_container: 9
2022-11-05 16:55:17,229:INFO:display_container: 2
2022-11-05 16:55:17,229:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5007)
2022-11-05 16:55:17,229:INFO:create_model() successfully completed......................................
2022-11-05 16:55:17,412:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:17,412:INFO:Creating metrics dataframe
2022-11-05 16:55:17,428:INFO:Initializing Gradient Boosting Classifier
2022-11-05 16:55:17,428:INFO:Total runtime is 0.26274412870407104 minutes
2022-11-05 16:55:17,428:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:17,428:INFO:Initializing create_model()
2022-11-05 16:55:17,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:17,428:INFO:Checking exceptions
2022-11-05 16:55:17,428:INFO:Importing libraries
2022-11-05 16:55:17,428:INFO:Copying training dataset
2022-11-05 16:55:17,428:INFO:Defining folds
2022-11-05 16:55:17,428:INFO:Declaring metric variables
2022-11-05 16:55:17,428:INFO:Importing untrained model
2022-11-05 16:55:17,428:INFO:Gradient Boosting Classifier Imported successfully
2022-11-05 16:55:17,428:INFO:Starting cross validation
2022-11-05 16:55:17,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:18,221:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:18,314:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:18,962:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:19,013:INFO:Calculating mean and std
2022-11-05 16:55:19,013:INFO:Creating metrics dataframe
2022-11-05 16:55:19,013:INFO:Uploading results into container
2022-11-05 16:55:19,013:INFO:Uploading model into container now
2022-11-05 16:55:19,013:INFO:master_model_container: 10
2022-11-05 16:55:19,013:INFO:display_container: 2
2022-11-05 16:55:19,013:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5007, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-05 16:55:19,013:INFO:create_model() successfully completed......................................
2022-11-05 16:55:19,204:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:19,204:INFO:Creating metrics dataframe
2022-11-05 16:55:19,219:INFO:Initializing Linear Discriminant Analysis
2022-11-05 16:55:19,219:INFO:Total runtime is 0.29259653091430665 minutes
2022-11-05 16:55:19,219:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:19,219:INFO:Initializing create_model()
2022-11-05 16:55:19,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:19,219:INFO:Checking exceptions
2022-11-05 16:55:19,219:INFO:Importing libraries
2022-11-05 16:55:19,219:INFO:Copying training dataset
2022-11-05 16:55:19,219:INFO:Defining folds
2022-11-05 16:55:19,219:INFO:Declaring metric variables
2022-11-05 16:55:19,219:INFO:Importing untrained model
2022-11-05 16:55:19,219:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 16:55:19,235:INFO:Starting cross validation
2022-11-05 16:55:19,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:20,054:INFO:Calculating mean and std
2022-11-05 16:55:20,054:INFO:Creating metrics dataframe
2022-11-05 16:55:20,054:INFO:Uploading results into container
2022-11-05 16:55:20,054:INFO:Uploading model into container now
2022-11-05 16:55:20,054:INFO:master_model_container: 11
2022-11-05 16:55:20,054:INFO:display_container: 2
2022-11-05 16:55:20,054:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 16:55:20,054:INFO:create_model() successfully completed......................................
2022-11-05 16:55:20,245:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:20,245:INFO:Creating metrics dataframe
2022-11-05 16:55:20,245:INFO:Initializing Extra Trees Classifier
2022-11-05 16:55:20,245:INFO:Total runtime is 0.30968540112177534 minutes
2022-11-05 16:55:20,245:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:20,245:INFO:Initializing create_model()
2022-11-05 16:55:20,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:20,245:INFO:Checking exceptions
2022-11-05 16:55:20,245:INFO:Importing libraries
2022-11-05 16:55:20,245:INFO:Copying training dataset
2022-11-05 16:55:20,245:INFO:Defining folds
2022-11-05 16:55:20,245:INFO:Declaring metric variables
2022-11-05 16:55:20,245:INFO:Importing untrained model
2022-11-05 16:55:20,245:INFO:Extra Trees Classifier Imported successfully
2022-11-05 16:55:20,245:INFO:Starting cross validation
2022-11-05 16:55:20,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:22,045:INFO:Calculating mean and std
2022-11-05 16:55:22,045:INFO:Creating metrics dataframe
2022-11-05 16:55:22,045:INFO:Uploading results into container
2022-11-05 16:55:22,045:INFO:Uploading model into container now
2022-11-05 16:55:22,045:INFO:master_model_container: 12
2022-11-05 16:55:22,045:INFO:display_container: 2
2022-11-05 16:55:22,045:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5007, verbose=0, warm_start=False)
2022-11-05 16:55:22,045:INFO:create_model() successfully completed......................................
2022-11-05 16:55:22,245:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:22,245:INFO:Creating metrics dataframe
2022-11-05 16:55:22,245:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 16:55:22,245:INFO:Total runtime is 0.3430177927017212 minutes
2022-11-05 16:55:22,245:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:22,245:INFO:Initializing create_model()
2022-11-05 16:55:22,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:22,245:INFO:Checking exceptions
2022-11-05 16:55:22,245:INFO:Importing libraries
2022-11-05 16:55:22,245:INFO:Copying training dataset
2022-11-05 16:55:22,245:INFO:Defining folds
2022-11-05 16:55:22,245:INFO:Declaring metric variables
2022-11-05 16:55:22,245:INFO:Importing untrained model
2022-11-05 16:55:22,245:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 16:55:22,245:INFO:Starting cross validation
2022-11-05 16:55:22,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:22,766:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:22,798:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,253:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,269:INFO:Calculating mean and std
2022-11-05 16:55:23,269:INFO:Creating metrics dataframe
2022-11-05 16:55:23,284:INFO:Uploading results into container
2022-11-05 16:55:23,284:INFO:Uploading model into container now
2022-11-05 16:55:23,284:INFO:master_model_container: 13
2022-11-05 16:55:23,284:INFO:display_container: 2
2022-11-05 16:55:23,284:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5007, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-05 16:55:23,284:INFO:create_model() successfully completed......................................
2022-11-05 16:55:23,479:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:23,479:INFO:Creating metrics dataframe
2022-11-05 16:55:23,494:INFO:Initializing Dummy Classifier
2022-11-05 16:55:23,494:INFO:Total runtime is 0.3638461947441101 minutes
2022-11-05 16:55:23,494:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:23,494:INFO:Initializing create_model()
2022-11-05 16:55:23,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FEF1AC10>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:23,494:INFO:Checking exceptions
2022-11-05 16:55:23,494:INFO:Importing libraries
2022-11-05 16:55:23,494:INFO:Copying training dataset
2022-11-05 16:55:23,504:INFO:Defining folds
2022-11-05 16:55:23,504:INFO:Declaring metric variables
2022-11-05 16:55:23,504:INFO:Importing untrained model
2022-11-05 16:55:23,504:INFO:Dummy Classifier Imported successfully
2022-11-05 16:55:23,510:INFO:Starting cross validation
2022-11-05 16:55:23,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:23,938:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,972:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,976:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,987:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:23,990:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,001:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,001:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,091:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,413:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,454:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:24,454:INFO:Calculating mean and std
2022-11-05 16:55:24,461:INFO:Creating metrics dataframe
2022-11-05 16:55:24,461:INFO:Uploading results into container
2022-11-05 16:55:24,461:INFO:Uploading model into container now
2022-11-05 16:55:24,461:INFO:master_model_container: 14
2022-11-05 16:55:24,461:INFO:display_container: 2
2022-11-05 16:55:24,461:INFO:DummyClassifier(constant=None, random_state=5007, strategy='prior')
2022-11-05 16:55:24,461:INFO:create_model() successfully completed......................................
2022-11-05 16:55:24,655:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:24,655:INFO:Creating metrics dataframe
2022-11-05 16:55:24,666:INFO:Initializing create_model()
2022-11-05 16:55:24,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FFB55250>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:24,667:INFO:Checking exceptions
2022-11-05 16:55:24,672:INFO:Importing libraries
2022-11-05 16:55:24,672:INFO:Copying training dataset
2022-11-05 16:55:24,677:INFO:Defining folds
2022-11-05 16:55:24,677:INFO:Declaring metric variables
2022-11-05 16:55:24,679:INFO:Importing untrained model
2022-11-05 16:55:24,679:INFO:Declaring custom model
2022-11-05 16:55:24,681:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 16:55:24,686:INFO:Cross validation set to False
2022-11-05 16:55:24,686:INFO:Fitting Model
2022-11-05 16:55:25,060:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 16:55:25,060:INFO:create_model() successfully completed......................................
2022-11-05 16:55:25,247:INFO:master_model_container: 14
2022-11-05 16:55:25,247:INFO:display_container: 2
2022-11-05 16:55:25,247:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 16:55:25,247:INFO:compare_models() successfully completed......................................
2022-11-05 16:55:42,173:INFO:PyCaret ClassificationExperiment
2022-11-05 16:55:42,174:INFO:Logging name: clf-default-name
2022-11-05 16:55:42,174:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-05 16:55:42,174:INFO:version 3.0.0.rc4
2022-11-05 16:55:42,174:INFO:Initializing setup()
2022-11-05 16:55:42,174:INFO:self.USI: acdd
2022-11-05 16:55:42,174:INFO:self.variable_keys: {'memory', 'exp_name_log', 'gpu_param', 'USI', 'pipeline', '_available_plots', '_is_multiclass', 'X_train', '_gpu_n_jobs_param', 'n_jobs_param', 'master_model_container', 'y_test', 'fix_imbalance', '_all_models', 'y_train', 'fold_groups_param', '_all_metrics', 'exp_id', '_ml_usecase', 'data', 'X', 'fold_shuffle_param', 'fold_generator', 'display_container', 'log_plots_param', 'logging_param', 'X_test', 'html_param', 'variable_keys', 'target_param', 'y', 'seed', '_all_models_internal', 'idx'}
2022-11-05 16:55:42,175:INFO:Checking environment
2022-11-05 16:55:42,175:INFO:python_version: 3.9.13
2022-11-05 16:55:42,175:INFO:python_build: ('main', 'Oct 13 2022 21:23:06')
2022-11-05 16:55:42,175:INFO:machine: AMD64
2022-11-05 16:55:42,175:INFO:platform: Windows-10-10.0.22000-SP0
2022-11-05 16:55:42,175:INFO:Memory: svmem(total=8277590016, available=1226539008, percent=85.2, used=7051051008, free=1226539008)
2022-11-05 16:55:42,175:INFO:Physical Core: 4
2022-11-05 16:55:42,175:INFO:Logical Core: 8
2022-11-05 16:55:42,175:INFO:Checking libraries
2022-11-05 16:55:42,175:INFO:System:
2022-11-05 16:55:42,175:INFO:    python: 3.9.13 (main, Oct 13 2022, 21:23:06) [MSC v.1916 64 bit (AMD64)]
2022-11-05 16:55:42,175:INFO:executable: C:\Users\ranji\anaconda3\python.exe
2022-11-05 16:55:42,175:INFO:   machine: Windows-10-10.0.22000-SP0
2022-11-05 16:55:42,175:INFO:PyCaret required dependencies:
2022-11-05 16:55:42,175:INFO:                 pip: 22.2.2
2022-11-05 16:55:42,175:INFO:          setuptools: 65.5.0
2022-11-05 16:55:42,175:INFO:             pycaret: 3.0.0rc4
2022-11-05 16:55:42,175:INFO:             IPython: 7.31.1
2022-11-05 16:55:42,175:INFO:          ipywidgets: 7.6.5
2022-11-05 16:55:42,175:INFO:                tqdm: 4.64.1
2022-11-05 16:55:42,175:INFO:               numpy: 1.21.5
2022-11-05 16:55:42,175:INFO:              pandas: 1.4.4
2022-11-05 16:55:42,175:INFO:              jinja2: 2.11.3
2022-11-05 16:55:42,175:INFO:               scipy: 1.9.3
2022-11-05 16:55:42,175:INFO:              joblib: 1.1.1
2022-11-05 16:55:42,175:INFO:             sklearn: 1.1.3
2022-11-05 16:55:42,175:INFO:                pyod: 1.0.6
2022-11-05 16:55:42,175:INFO:            imblearn: 0.9.1
2022-11-05 16:55:42,175:INFO:   category_encoders: 2.5.1.post0
2022-11-05 16:55:42,176:INFO:            lightgbm: 3.3.3
2022-11-05 16:55:42,176:INFO:               numba: 0.56.3
2022-11-05 16:55:42,176:INFO:            requests: 2.28.1
2022-11-05 16:55:42,176:INFO:          matplotlib: 3.5.3
2022-11-05 16:55:42,176:INFO:          scikitplot: 0.3.7
2022-11-05 16:55:42,176:INFO:         yellowbrick: 1.5
2022-11-05 16:55:42,176:INFO:              plotly: 5.9.0
2022-11-05 16:55:42,176:INFO:             kaleido: 0.2.1
2022-11-05 16:55:42,176:INFO:         statsmodels: 0.13.2
2022-11-05 16:55:42,176:INFO:              sktime: 0.13.4
2022-11-05 16:55:42,176:INFO:               tbats: 1.1.1
2022-11-05 16:55:42,176:INFO:            pmdarima: 1.8.5
2022-11-05 16:55:42,176:INFO:              psutil: 5.9.0
2022-11-05 16:55:42,176:INFO:PyCaret optional dependencies:
2022-11-05 16:55:42,176:INFO:                shap: Not installed
2022-11-05 16:55:42,176:INFO:           interpret: Not installed
2022-11-05 16:55:42,176:INFO:                umap: Not installed
2022-11-05 16:55:42,176:INFO:    pandas_profiling: 3.4.0
2022-11-05 16:55:42,176:INFO:  explainerdashboard: Not installed
2022-11-05 16:55:42,177:INFO:             autoviz: Not installed
2022-11-05 16:55:42,177:INFO:           fairlearn: Not installed
2022-11-05 16:55:42,177:INFO:             xgboost: Not installed
2022-11-05 16:55:42,177:INFO:            catboost: Not installed
2022-11-05 16:55:42,177:INFO:              kmodes: Not installed
2022-11-05 16:55:42,177:INFO:             mlxtend: Not installed
2022-11-05 16:55:42,177:INFO:       statsforecast: Not installed
2022-11-05 16:55:42,177:INFO:        tune_sklearn: Not installed
2022-11-05 16:55:42,177:INFO:                 ray: Not installed
2022-11-05 16:55:42,177:INFO:            hyperopt: Not installed
2022-11-05 16:55:42,177:INFO:              optuna: Not installed
2022-11-05 16:55:42,177:INFO:               skopt: Not installed
2022-11-05 16:55:42,177:INFO:              mlflow: Not installed
2022-11-05 16:55:42,178:INFO:              gradio: Not installed
2022-11-05 16:55:42,178:INFO:             fastapi: Not installed
2022-11-05 16:55:42,178:INFO:             uvicorn: Not installed
2022-11-05 16:55:42,178:INFO:              m2cgen: Not installed
2022-11-05 16:55:42,178:INFO:           evidently: Not installed
2022-11-05 16:55:42,178:INFO:                nltk: 3.7
2022-11-05 16:55:42,178:INFO:            pyLDAvis: Not installed
2022-11-05 16:55:42,178:INFO:              gensim: 4.1.2
2022-11-05 16:55:42,178:INFO:               spacy: Not installed
2022-11-05 16:55:42,178:INFO:           wordcloud: Not installed
2022-11-05 16:55:42,178:INFO:            textblob: Not installed
2022-11-05 16:55:42,178:INFO:               fugue: Not installed
2022-11-05 16:55:42,178:INFO:           streamlit: 1.14.0
2022-11-05 16:55:42,178:INFO:             prophet: Not installed
2022-11-05 16:55:42,178:INFO:None
2022-11-05 16:55:42,179:INFO:Set up data.
2022-11-05 16:55:42,190:INFO:Set up train/test split.
2022-11-05 16:55:42,198:INFO:Set up index.
2022-11-05 16:55:42,199:INFO:Assigning column types.
2022-11-05 16:55:42,205:INFO:Set up folding strategy.
2022-11-05 16:55:42,205:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 16:55:42,266:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,267:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,406:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 16:55:42,464:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 16:55:42,610:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,610:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-05 16:55:42,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:42,777:INFO:Preparing preprocessing pipeline...
2022-11-05 16:55:42,779:INFO:Set up label encoding.
2022-11-05 16:55:42,779:INFO:Set up simple imputation.
2022-11-05 16:55:42,783:INFO:Set up encoding of ordinal features.
2022-11-05 16:55:42,786:INFO:Set up encoding of categorical features.
2022-11-05 16:55:42,786:INFO:Set up variance threshold.
2022-11-05 16:55:43,457:INFO:Finished creating preprocessing pipeline.
2022-11-05 16:55:43,465:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=2472,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-05 16:55:43,465:INFO:Creating final display dataframe.
2022-11-05 16:55:45,735:INFO:Setup display_container:                     Description             Value
0                    Session id              2472
1                        Target           default
2                   Target type            Binary
3                Target mapping        1: 0, 2: 1
4           Original data shape        (1000, 21)
5        Transformed data shape        (1000, 51)
6   Transformed train set shape         (699, 51)
7    Transformed test set shape         (301, 51)
8              Ordinal features                 2
9              Numeric features                 7
10         Categorical features                13
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation          constant
15     Maximum one-hot encoding                 5
16              Encoding method              None
17       Low variance threshold                 0
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              acdd
2022-11-05 16:55:45,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:45,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:45,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:45,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 16:55:46,009:INFO:setup() successfully completed in 3.84s...............
2022-11-05 16:55:46,029:INFO:Initializing compare_models()
2022-11-05 16:55:46,029:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-05 16:55:46,029:INFO:Checking exceptions
2022-11-05 16:55:46,034:INFO:Preparing display monitor
2022-11-05 16:55:46,038:INFO:Initializing Logistic Regression
2022-11-05 16:55:46,038:INFO:Total runtime is 0.0 minutes
2022-11-05 16:55:46,038:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:46,038:INFO:Initializing create_model()
2022-11-05 16:55:46,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:46,038:INFO:Checking exceptions
2022-11-05 16:55:46,041:INFO:Importing libraries
2022-11-05 16:55:46,041:INFO:Copying training dataset
2022-11-05 16:55:46,049:INFO:Defining folds
2022-11-05 16:55:46,049:INFO:Declaring metric variables
2022-11-05 16:55:46,050:INFO:Importing untrained model
2022-11-05 16:55:46,051:INFO:Logistic Regression Imported successfully
2022-11-05 16:55:46,051:INFO:Starting cross validation
2022-11-05 16:55:46,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:49,856:INFO:Calculating mean and std
2022-11-05 16:55:49,856:INFO:Creating metrics dataframe
2022-11-05 16:55:49,872:INFO:Uploading results into container
2022-11-05 16:55:49,878:INFO:Uploading model into container now
2022-11-05 16:55:49,878:INFO:master_model_container: 1
2022-11-05 16:55:49,878:INFO:display_container: 2
2022-11-05 16:55:49,878:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2472, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 16:55:49,878:INFO:create_model() successfully completed......................................
2022-11-05 16:55:50,078:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:50,078:INFO:Creating metrics dataframe
2022-11-05 16:55:50,090:INFO:Initializing K Neighbors Classifier
2022-11-05 16:55:50,090:INFO:Total runtime is 0.0675238013267517 minutes
2022-11-05 16:55:50,090:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:50,090:INFO:Initializing create_model()
2022-11-05 16:55:50,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:50,090:INFO:Checking exceptions
2022-11-05 16:55:50,090:INFO:Importing libraries
2022-11-05 16:55:50,090:INFO:Copying training dataset
2022-11-05 16:55:50,090:INFO:Defining folds
2022-11-05 16:55:50,090:INFO:Declaring metric variables
2022-11-05 16:55:50,090:INFO:Importing untrained model
2022-11-05 16:55:50,090:INFO:K Neighbors Classifier Imported successfully
2022-11-05 16:55:50,090:INFO:Starting cross validation
2022-11-05 16:55:50,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:51,174:INFO:Calculating mean and std
2022-11-05 16:55:51,175:INFO:Creating metrics dataframe
2022-11-05 16:55:51,181:INFO:Uploading results into container
2022-11-05 16:55:51,181:INFO:Uploading model into container now
2022-11-05 16:55:51,182:INFO:master_model_container: 2
2022-11-05 16:55:51,182:INFO:display_container: 2
2022-11-05 16:55:51,182:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-05 16:55:51,182:INFO:create_model() successfully completed......................................
2022-11-05 16:55:51,335:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:51,335:INFO:Creating metrics dataframe
2022-11-05 16:55:51,335:INFO:Initializing Naive Bayes
2022-11-05 16:55:51,335:INFO:Total runtime is 0.08828442096710204 minutes
2022-11-05 16:55:51,335:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:51,335:INFO:Initializing create_model()
2022-11-05 16:55:51,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:51,335:INFO:Checking exceptions
2022-11-05 16:55:51,335:INFO:Importing libraries
2022-11-05 16:55:51,335:INFO:Copying training dataset
2022-11-05 16:55:51,354:INFO:Defining folds
2022-11-05 16:55:51,354:INFO:Declaring metric variables
2022-11-05 16:55:51,355:INFO:Importing untrained model
2022-11-05 16:55:51,356:INFO:Naive Bayes Imported successfully
2022-11-05 16:55:51,356:INFO:Starting cross validation
2022-11-05 16:55:51,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:52,072:INFO:Calculating mean and std
2022-11-05 16:55:52,072:INFO:Creating metrics dataframe
2022-11-05 16:55:52,072:INFO:Uploading results into container
2022-11-05 16:55:52,072:INFO:Uploading model into container now
2022-11-05 16:55:52,084:INFO:master_model_container: 3
2022-11-05 16:55:52,084:INFO:display_container: 2
2022-11-05 16:55:52,084:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-05 16:55:52,084:INFO:create_model() successfully completed......................................
2022-11-05 16:55:52,273:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:52,273:INFO:Creating metrics dataframe
2022-11-05 16:55:52,284:INFO:Initializing Decision Tree Classifier
2022-11-05 16:55:52,284:INFO:Total runtime is 0.1040954033533732 minutes
2022-11-05 16:55:52,284:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:52,284:INFO:Initializing create_model()
2022-11-05 16:55:52,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:52,284:INFO:Checking exceptions
2022-11-05 16:55:52,288:INFO:Importing libraries
2022-11-05 16:55:52,288:INFO:Copying training dataset
2022-11-05 16:55:52,288:INFO:Defining folds
2022-11-05 16:55:52,288:INFO:Declaring metric variables
2022-11-05 16:55:52,288:INFO:Importing untrained model
2022-11-05 16:55:52,288:INFO:Decision Tree Classifier Imported successfully
2022-11-05 16:55:52,288:INFO:Starting cross validation
2022-11-05 16:55:52,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:52,993:INFO:Calculating mean and std
2022-11-05 16:55:52,993:INFO:Creating metrics dataframe
2022-11-05 16:55:52,993:INFO:Uploading results into container
2022-11-05 16:55:52,993:INFO:Uploading model into container now
2022-11-05 16:55:52,993:INFO:master_model_container: 4
2022-11-05 16:55:52,993:INFO:display_container: 2
2022-11-05 16:55:52,993:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2472, splitter='best')
2022-11-05 16:55:52,993:INFO:create_model() successfully completed......................................
2022-11-05 16:55:53,177:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:53,177:INFO:Creating metrics dataframe
2022-11-05 16:55:53,181:INFO:Initializing SVM - Linear Kernel
2022-11-05 16:55:53,181:INFO:Total runtime is 0.11903923352559406 minutes
2022-11-05 16:55:53,181:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:53,181:INFO:Initializing create_model()
2022-11-05 16:55:53,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:53,182:INFO:Checking exceptions
2022-11-05 16:55:53,183:INFO:Importing libraries
2022-11-05 16:55:53,183:INFO:Copying training dataset
2022-11-05 16:55:53,186:INFO:Defining folds
2022-11-05 16:55:53,186:INFO:Declaring metric variables
2022-11-05 16:55:53,186:INFO:Importing untrained model
2022-11-05 16:55:53,186:INFO:SVM - Linear Kernel Imported successfully
2022-11-05 16:55:53,187:INFO:Starting cross validation
2022-11-05 16:55:53,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:53,492:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,492:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,508:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,508:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,735:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,751:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:53,751:INFO:Calculating mean and std
2022-11-05 16:55:53,751:INFO:Creating metrics dataframe
2022-11-05 16:55:53,751:INFO:Uploading results into container
2022-11-05 16:55:53,751:INFO:Uploading model into container now
2022-11-05 16:55:53,751:INFO:master_model_container: 5
2022-11-05 16:55:53,751:INFO:display_container: 2
2022-11-05 16:55:53,751:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2472, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-05 16:55:53,751:INFO:create_model() successfully completed......................................
2022-11-05 16:55:53,974:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:53,974:INFO:Creating metrics dataframe
2022-11-05 16:55:53,983:INFO:Initializing Ridge Classifier
2022-11-05 16:55:53,983:INFO:Total runtime is 0.13241811593373615 minutes
2022-11-05 16:55:53,983:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:53,984:INFO:Initializing create_model()
2022-11-05 16:55:53,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:53,984:INFO:Checking exceptions
2022-11-05 16:55:53,988:INFO:Importing libraries
2022-11-05 16:55:53,988:INFO:Copying training dataset
2022-11-05 16:55:53,993:INFO:Defining folds
2022-11-05 16:55:53,993:INFO:Declaring metric variables
2022-11-05 16:55:53,994:INFO:Importing untrained model
2022-11-05 16:55:53,994:INFO:Ridge Classifier Imported successfully
2022-11-05 16:55:53,994:INFO:Starting cross validation
2022-11-05 16:55:53,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:54,504:INFO:Calculating mean and std
2022-11-05 16:55:54,504:INFO:Creating metrics dataframe
2022-11-05 16:55:54,520:INFO:Uploading results into container
2022-11-05 16:55:54,520:INFO:Uploading model into container now
2022-11-05 16:55:54,520:INFO:master_model_container: 6
2022-11-05 16:55:54,520:INFO:display_container: 2
2022-11-05 16:55:54,520:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2472, solver='auto', tol=0.001)
2022-11-05 16:55:54,520:INFO:create_model() successfully completed......................................
2022-11-05 16:55:54,695:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:54,695:INFO:Creating metrics dataframe
2022-11-05 16:55:54,695:INFO:Initializing Random Forest Classifier
2022-11-05 16:55:54,695:INFO:Total runtime is 0.14428209861119587 minutes
2022-11-05 16:55:54,695:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:54,695:INFO:Initializing create_model()
2022-11-05 16:55:54,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:54,695:INFO:Checking exceptions
2022-11-05 16:55:54,695:INFO:Importing libraries
2022-11-05 16:55:54,695:INFO:Copying training dataset
2022-11-05 16:55:54,695:INFO:Defining folds
2022-11-05 16:55:54,695:INFO:Declaring metric variables
2022-11-05 16:55:54,695:INFO:Importing untrained model
2022-11-05 16:55:54,695:INFO:Random Forest Classifier Imported successfully
2022-11-05 16:55:54,695:INFO:Starting cross validation
2022-11-05 16:55:54,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:56,458:INFO:Calculating mean and std
2022-11-05 16:55:56,458:INFO:Creating metrics dataframe
2022-11-05 16:55:56,474:INFO:Uploading results into container
2022-11-05 16:55:56,474:INFO:Uploading model into container now
2022-11-05 16:55:56,474:INFO:master_model_container: 7
2022-11-05 16:55:56,474:INFO:display_container: 2
2022-11-05 16:55:56,474:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2472, verbose=0, warm_start=False)
2022-11-05 16:55:56,474:INFO:create_model() successfully completed......................................
2022-11-05 16:55:56,655:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:56,655:INFO:Creating metrics dataframe
2022-11-05 16:55:56,671:INFO:Initializing Quadratic Discriminant Analysis
2022-11-05 16:55:56,671:INFO:Total runtime is 0.17721242904663084 minutes
2022-11-05 16:55:56,671:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:56,671:INFO:Initializing create_model()
2022-11-05 16:55:56,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:56,671:INFO:Checking exceptions
2022-11-05 16:55:56,671:INFO:Importing libraries
2022-11-05 16:55:56,671:INFO:Copying training dataset
2022-11-05 16:55:56,671:INFO:Defining folds
2022-11-05 16:55:56,671:INFO:Declaring metric variables
2022-11-05 16:55:56,671:INFO:Importing untrained model
2022-11-05 16:55:56,671:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-05 16:55:56,671:INFO:Starting cross validation
2022-11-05 16:55:56,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:56,910:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,930:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,930:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,943:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,962:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,966:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:56,980:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:57,447:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:57,462:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 16:55:57,825:INFO:Calculating mean and std
2022-11-05 16:55:57,825:INFO:Creating metrics dataframe
2022-11-05 16:55:57,840:INFO:Uploading results into container
2022-11-05 16:55:57,840:INFO:Uploading model into container now
2022-11-05 16:55:57,840:INFO:master_model_container: 8
2022-11-05 16:55:57,840:INFO:display_container: 2
2022-11-05 16:55:57,840:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-05 16:55:57,840:INFO:create_model() successfully completed......................................
2022-11-05 16:55:58,081:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:58,081:INFO:Creating metrics dataframe
2022-11-05 16:55:58,096:INFO:Initializing Ada Boost Classifier
2022-11-05 16:55:58,096:INFO:Total runtime is 0.20096552769343057 minutes
2022-11-05 16:55:58,096:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:58,096:INFO:Initializing create_model()
2022-11-05 16:55:58,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:58,096:INFO:Checking exceptions
2022-11-05 16:55:58,096:INFO:Importing libraries
2022-11-05 16:55:58,096:INFO:Copying training dataset
2022-11-05 16:55:58,096:INFO:Defining folds
2022-11-05 16:55:58,096:INFO:Declaring metric variables
2022-11-05 16:55:58,096:INFO:Importing untrained model
2022-11-05 16:55:58,096:INFO:Ada Boost Classifier Imported successfully
2022-11-05 16:55:58,096:INFO:Starting cross validation
2022-11-05 16:55:58,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:55:58,876:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:58,977:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:55:59,439:INFO:Calculating mean and std
2022-11-05 16:55:59,439:INFO:Creating metrics dataframe
2022-11-05 16:55:59,439:INFO:Uploading results into container
2022-11-05 16:55:59,439:INFO:Uploading model into container now
2022-11-05 16:55:59,439:INFO:master_model_container: 9
2022-11-05 16:55:59,439:INFO:display_container: 2
2022-11-05 16:55:59,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2472)
2022-11-05 16:55:59,439:INFO:create_model() successfully completed......................................
2022-11-05 16:55:59,646:INFO:SubProcess create_model() end ==================================
2022-11-05 16:55:59,646:INFO:Creating metrics dataframe
2022-11-05 16:55:59,646:INFO:Initializing Gradient Boosting Classifier
2022-11-05 16:55:59,646:INFO:Total runtime is 0.2267881433169047 minutes
2022-11-05 16:55:59,646:INFO:SubProcess create_model() called ==================================
2022-11-05 16:55:59,646:INFO:Initializing create_model()
2022-11-05 16:55:59,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:55:59,646:INFO:Checking exceptions
2022-11-05 16:55:59,646:INFO:Importing libraries
2022-11-05 16:55:59,646:INFO:Copying training dataset
2022-11-05 16:55:59,663:INFO:Defining folds
2022-11-05 16:55:59,663:INFO:Declaring metric variables
2022-11-05 16:55:59,663:INFO:Importing untrained model
2022-11-05 16:55:59,663:INFO:Gradient Boosting Classifier Imported successfully
2022-11-05 16:55:59,663:INFO:Starting cross validation
2022-11-05 16:55:59,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:56:00,492:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:00,505:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:01,319:INFO:Calculating mean and std
2022-11-05 16:56:01,319:INFO:Creating metrics dataframe
2022-11-05 16:56:01,319:INFO:Uploading results into container
2022-11-05 16:56:01,319:INFO:Uploading model into container now
2022-11-05 16:56:01,319:INFO:master_model_container: 10
2022-11-05 16:56:01,319:INFO:display_container: 2
2022-11-05 16:56:01,319:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2472, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-05 16:56:01,319:INFO:create_model() successfully completed......................................
2022-11-05 16:56:01,487:INFO:SubProcess create_model() end ==================================
2022-11-05 16:56:01,487:INFO:Creating metrics dataframe
2022-11-05 16:56:01,503:INFO:Initializing Linear Discriminant Analysis
2022-11-05 16:56:01,503:INFO:Total runtime is 0.25773884455362955 minutes
2022-11-05 16:56:01,503:INFO:SubProcess create_model() called ==================================
2022-11-05 16:56:01,503:INFO:Initializing create_model()
2022-11-05 16:56:01,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:56:01,503:INFO:Checking exceptions
2022-11-05 16:56:01,503:INFO:Importing libraries
2022-11-05 16:56:01,503:INFO:Copying training dataset
2022-11-05 16:56:01,503:INFO:Defining folds
2022-11-05 16:56:01,503:INFO:Declaring metric variables
2022-11-05 16:56:01,503:INFO:Importing untrained model
2022-11-05 16:56:01,503:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 16:56:01,503:INFO:Starting cross validation
2022-11-05 16:56:01,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:56:02,503:INFO:Calculating mean and std
2022-11-05 16:56:02,503:INFO:Creating metrics dataframe
2022-11-05 16:56:02,503:INFO:Uploading results into container
2022-11-05 16:56:02,503:INFO:Uploading model into container now
2022-11-05 16:56:02,503:INFO:master_model_container: 11
2022-11-05 16:56:02,503:INFO:display_container: 2
2022-11-05 16:56:02,516:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 16:56:02,516:INFO:create_model() successfully completed......................................
2022-11-05 16:56:02,704:INFO:SubProcess create_model() end ==================================
2022-11-05 16:56:02,704:INFO:Creating metrics dataframe
2022-11-05 16:56:02,704:INFO:Initializing Extra Trees Classifier
2022-11-05 16:56:02,704:INFO:Total runtime is 0.2777544975280762 minutes
2022-11-05 16:56:02,704:INFO:SubProcess create_model() called ==================================
2022-11-05 16:56:02,704:INFO:Initializing create_model()
2022-11-05 16:56:02,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:56:02,704:INFO:Checking exceptions
2022-11-05 16:56:02,718:INFO:Importing libraries
2022-11-05 16:56:02,718:INFO:Copying training dataset
2022-11-05 16:56:02,718:INFO:Defining folds
2022-11-05 16:56:02,718:INFO:Declaring metric variables
2022-11-05 16:56:02,718:INFO:Importing untrained model
2022-11-05 16:56:02,718:INFO:Extra Trees Classifier Imported successfully
2022-11-05 16:56:02,718:INFO:Starting cross validation
2022-11-05 16:56:02,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:56:04,572:INFO:Calculating mean and std
2022-11-05 16:56:04,573:INFO:Creating metrics dataframe
2022-11-05 16:56:04,579:INFO:Uploading results into container
2022-11-05 16:56:04,580:INFO:Uploading model into container now
2022-11-05 16:56:04,580:INFO:master_model_container: 12
2022-11-05 16:56:04,580:INFO:display_container: 2
2022-11-05 16:56:04,581:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2472, verbose=0, warm_start=False)
2022-11-05 16:56:04,581:INFO:create_model() successfully completed......................................
2022-11-05 16:56:04,797:INFO:SubProcess create_model() end ==================================
2022-11-05 16:56:04,798:INFO:Creating metrics dataframe
2022-11-05 16:56:04,807:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 16:56:04,807:INFO:Total runtime is 0.3128207564353943 minutes
2022-11-05 16:56:04,807:INFO:SubProcess create_model() called ==================================
2022-11-05 16:56:04,807:INFO:Initializing create_model()
2022-11-05 16:56:04,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:56:04,807:INFO:Checking exceptions
2022-11-05 16:56:04,807:INFO:Importing libraries
2022-11-05 16:56:04,807:INFO:Copying training dataset
2022-11-05 16:56:04,807:INFO:Defining folds
2022-11-05 16:56:04,807:INFO:Declaring metric variables
2022-11-05 16:56:04,807:INFO:Importing untrained model
2022-11-05 16:56:04,807:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 16:56:04,807:INFO:Starting cross validation
2022-11-05 16:56:04,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:56:05,324:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:05,378:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:05,902:INFO:Calculating mean and std
2022-11-05 16:56:05,902:INFO:Creating metrics dataframe
2022-11-05 16:56:05,909:INFO:Uploading results into container
2022-11-05 16:56:05,909:INFO:Uploading model into container now
2022-11-05 16:56:05,909:INFO:master_model_container: 13
2022-11-05 16:56:05,909:INFO:display_container: 2
2022-11-05 16:56:05,909:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2472, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-05 16:56:05,909:INFO:create_model() successfully completed......................................
2022-11-05 16:56:06,110:INFO:SubProcess create_model() end ==================================
2022-11-05 16:56:06,110:INFO:Creating metrics dataframe
2022-11-05 16:56:06,119:INFO:Initializing Dummy Classifier
2022-11-05 16:56:06,119:INFO:Total runtime is 0.33467547098795575 minutes
2022-11-05 16:56:06,119:INFO:SubProcess create_model() called ==================================
2022-11-05 16:56:06,119:INFO:Initializing create_model()
2022-11-05 16:56:06,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE24D520>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:56:06,119:INFO:Checking exceptions
2022-11-05 16:56:06,119:INFO:Importing libraries
2022-11-05 16:56:06,119:INFO:Copying training dataset
2022-11-05 16:56:06,119:INFO:Defining folds
2022-11-05 16:56:06,119:INFO:Declaring metric variables
2022-11-05 16:56:06,119:INFO:Importing untrained model
2022-11-05 16:56:06,119:INFO:Dummy Classifier Imported successfully
2022-11-05 16:56:06,119:INFO:Starting cross validation
2022-11-05 16:56:06,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 16:56:06,527:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,527:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,543:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,559:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,564:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,579:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,584:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:06,610:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:07,011:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:07,022:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 16:56:07,022:INFO:Calculating mean and std
2022-11-05 16:56:07,022:INFO:Creating metrics dataframe
2022-11-05 16:56:07,022:INFO:Uploading results into container
2022-11-05 16:56:07,022:INFO:Uploading model into container now
2022-11-05 16:56:07,022:INFO:master_model_container: 14
2022-11-05 16:56:07,022:INFO:display_container: 2
2022-11-05 16:56:07,022:INFO:DummyClassifier(constant=None, random_state=2472, strategy='prior')
2022-11-05 16:56:07,022:INFO:create_model() successfully completed......................................
2022-11-05 16:56:07,238:INFO:SubProcess create_model() end ==================================
2022-11-05 16:56:07,238:INFO:Creating metrics dataframe
2022-11-05 16:56:07,254:INFO:Initializing create_model()
2022-11-05 16:56:07,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FF12E2B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2472, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 16:56:07,254:INFO:Checking exceptions
2022-11-05 16:56:07,254:INFO:Importing libraries
2022-11-05 16:56:07,254:INFO:Copying training dataset
2022-11-05 16:56:07,254:INFO:Defining folds
2022-11-05 16:56:07,254:INFO:Declaring metric variables
2022-11-05 16:56:07,254:INFO:Importing untrained model
2022-11-05 16:56:07,254:INFO:Declaring custom model
2022-11-05 16:56:07,254:INFO:Logistic Regression Imported successfully
2022-11-05 16:56:07,254:INFO:Cross validation set to False
2022-11-05 16:56:07,254:INFO:Fitting Model
2022-11-05 16:56:07,839:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2472, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 16:56:07,839:INFO:create_model() successfully completed......................................
2022-11-05 16:56:08,013:INFO:master_model_container: 14
2022-11-05 16:56:08,013:INFO:display_container: 2
2022-11-05 16:56:08,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2472, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 16:56:08,013:INFO:compare_models() successfully completed......................................
2022-11-05 17:17:58,380:INFO:PyCaret ClassificationExperiment
2022-11-05 17:17:58,381:INFO:Logging name: clf-default-name
2022-11-05 17:17:58,381:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-05 17:17:58,381:INFO:version 3.0.0.rc4
2022-11-05 17:17:58,381:INFO:Initializing setup()
2022-11-05 17:17:58,381:INFO:self.USI: 3600
2022-11-05 17:17:58,381:INFO:self.variable_keys: {'memory', 'exp_name_log', 'gpu_param', 'USI', 'pipeline', '_available_plots', '_is_multiclass', 'X_train', '_gpu_n_jobs_param', 'n_jobs_param', 'master_model_container', 'y_test', 'fix_imbalance', '_all_models', 'y_train', 'fold_groups_param', '_all_metrics', 'exp_id', '_ml_usecase', 'data', 'X', 'fold_shuffle_param', 'fold_generator', 'display_container', 'log_plots_param', 'logging_param', 'X_test', 'html_param', 'variable_keys', 'target_param', 'y', 'seed', '_all_models_internal', 'idx'}
2022-11-05 17:17:58,382:INFO:Checking environment
2022-11-05 17:17:58,382:INFO:python_version: 3.9.13
2022-11-05 17:17:58,382:INFO:python_build: ('main', 'Oct 13 2022 21:23:06')
2022-11-05 17:17:58,382:INFO:machine: AMD64
2022-11-05 17:17:58,382:INFO:platform: Windows-10-10.0.22000-SP0
2022-11-05 17:17:58,382:INFO:Memory: svmem(total=8277590016, available=2483580928, percent=70.0, used=5794009088, free=2483580928)
2022-11-05 17:17:58,382:INFO:Physical Core: 4
2022-11-05 17:17:58,382:INFO:Logical Core: 8
2022-11-05 17:17:58,382:INFO:Checking libraries
2022-11-05 17:17:58,382:INFO:System:
2022-11-05 17:17:58,382:INFO:    python: 3.9.13 (main, Oct 13 2022, 21:23:06) [MSC v.1916 64 bit (AMD64)]
2022-11-05 17:17:58,382:INFO:executable: C:\Users\ranji\anaconda3\python.exe
2022-11-05 17:17:58,382:INFO:   machine: Windows-10-10.0.22000-SP0
2022-11-05 17:17:58,382:INFO:PyCaret required dependencies:
2022-11-05 17:17:58,382:INFO:                 pip: 22.2.2
2022-11-05 17:17:58,382:INFO:          setuptools: 65.5.0
2022-11-05 17:17:58,382:INFO:             pycaret: 3.0.0rc4
2022-11-05 17:17:58,382:INFO:             IPython: 7.31.1
2022-11-05 17:17:58,382:INFO:          ipywidgets: 7.6.5
2022-11-05 17:17:58,382:INFO:                tqdm: 4.64.1
2022-11-05 17:17:58,382:INFO:               numpy: 1.21.5
2022-11-05 17:17:58,382:INFO:              pandas: 1.4.4
2022-11-05 17:17:58,382:INFO:              jinja2: 2.11.3
2022-11-05 17:17:58,382:INFO:               scipy: 1.9.3
2022-11-05 17:17:58,382:INFO:              joblib: 1.1.1
2022-11-05 17:17:58,382:INFO:             sklearn: 1.1.3
2022-11-05 17:17:58,382:INFO:                pyod: 1.0.6
2022-11-05 17:17:58,383:INFO:            imblearn: 0.9.1
2022-11-05 17:17:58,383:INFO:   category_encoders: 2.5.1.post0
2022-11-05 17:17:58,383:INFO:            lightgbm: 3.3.3
2022-11-05 17:17:58,383:INFO:               numba: 0.56.3
2022-11-05 17:17:58,383:INFO:            requests: 2.28.1
2022-11-05 17:17:58,383:INFO:          matplotlib: 3.5.3
2022-11-05 17:17:58,383:INFO:          scikitplot: 0.3.7
2022-11-05 17:17:58,383:INFO:         yellowbrick: 1.5
2022-11-05 17:17:58,383:INFO:              plotly: 5.9.0
2022-11-05 17:17:58,383:INFO:             kaleido: 0.2.1
2022-11-05 17:17:58,383:INFO:         statsmodels: 0.13.2
2022-11-05 17:17:58,383:INFO:              sktime: 0.13.4
2022-11-05 17:17:58,383:INFO:               tbats: 1.1.1
2022-11-05 17:17:58,383:INFO:            pmdarima: 1.8.5
2022-11-05 17:17:58,383:INFO:              psutil: 5.9.0
2022-11-05 17:17:58,383:INFO:PyCaret optional dependencies:
2022-11-05 17:17:58,384:INFO:                shap: Not installed
2022-11-05 17:17:58,384:INFO:           interpret: Not installed
2022-11-05 17:17:58,384:INFO:                umap: Not installed
2022-11-05 17:17:58,384:INFO:    pandas_profiling: 3.4.0
2022-11-05 17:17:58,384:INFO:  explainerdashboard: Not installed
2022-11-05 17:17:58,384:INFO:             autoviz: Not installed
2022-11-05 17:17:58,384:INFO:           fairlearn: Not installed
2022-11-05 17:17:58,385:INFO:             xgboost: Not installed
2022-11-05 17:17:58,385:INFO:            catboost: Not installed
2022-11-05 17:17:58,385:INFO:              kmodes: Not installed
2022-11-05 17:17:58,385:INFO:             mlxtend: Not installed
2022-11-05 17:17:58,385:INFO:       statsforecast: Not installed
2022-11-05 17:17:58,385:INFO:        tune_sklearn: Not installed
2022-11-05 17:17:58,385:INFO:                 ray: Not installed
2022-11-05 17:17:58,385:INFO:            hyperopt: Not installed
2022-11-05 17:17:58,386:INFO:              optuna: Not installed
2022-11-05 17:17:58,386:INFO:               skopt: Not installed
2022-11-05 17:17:58,386:INFO:              mlflow: Not installed
2022-11-05 17:17:58,386:INFO:              gradio: Not installed
2022-11-05 17:17:58,386:INFO:             fastapi: Not installed
2022-11-05 17:17:58,386:INFO:             uvicorn: Not installed
2022-11-05 17:17:58,386:INFO:              m2cgen: Not installed
2022-11-05 17:17:58,386:INFO:           evidently: Not installed
2022-11-05 17:17:58,386:INFO:                nltk: 3.7
2022-11-05 17:17:58,386:INFO:            pyLDAvis: Not installed
2022-11-05 17:17:58,386:INFO:              gensim: 4.1.2
2022-11-05 17:17:58,386:INFO:               spacy: Not installed
2022-11-05 17:17:58,386:INFO:           wordcloud: Not installed
2022-11-05 17:17:58,386:INFO:            textblob: Not installed
2022-11-05 17:17:58,386:INFO:               fugue: Not installed
2022-11-05 17:17:58,386:INFO:           streamlit: 1.14.0
2022-11-05 17:17:58,386:INFO:             prophet: Not installed
2022-11-05 17:17:58,387:INFO:None
2022-11-05 17:17:58,387:INFO:Set up data.
2022-11-05 17:17:58,415:INFO:Set up train/test split.
2022-11-05 17:17:58,426:INFO:Set up index.
2022-11-05 17:17:58,427:INFO:Assigning column types.
2022-11-05 17:17:58,430:INFO:Set up folding strategy.
2022-11-05 17:17:58,431:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 17:17:58,497:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,498:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,649:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 17:17:58,706:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,833:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:17:58,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,876:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-05 17:17:58,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:58,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:59,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:59,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:17:59,042:INFO:Preparing preprocessing pipeline...
2022-11-05 17:17:59,042:INFO:Set up label encoding.
2022-11-05 17:17:59,042:INFO:Set up simple imputation.
2022-11-05 17:17:59,059:INFO:Set up encoding of ordinal features.
2022-11-05 17:17:59,059:INFO:Set up encoding of categorical features.
2022-11-05 17:17:59,059:INFO:Set up variance threshold.
2022-11-05 17:17:59,856:INFO:Finished creating preprocessing pipeline.
2022-11-05 17:17:59,873:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=6754,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-05 17:17:59,873:INFO:Creating final display dataframe.
2022-11-05 17:18:02,202:INFO:Setup display_container:                     Description             Value
0                    Session id              6754
1                        Target           default
2                   Target type            Binary
3                Target mapping        1: 0, 2: 1
4           Original data shape        (1000, 21)
5        Transformed data shape        (1000, 51)
6   Transformed train set shape         (699, 51)
7    Transformed test set shape         (301, 51)
8              Ordinal features                 2
9              Numeric features                 7
10         Categorical features                13
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation          constant
15     Maximum one-hot encoding                 5
16              Encoding method              None
17       Low variance threshold                 0
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              3600
2022-11-05 17:18:02,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:18:02,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:18:02,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:18:02,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:18:02,473:INFO:setup() successfully completed in 4.1s...............
2022-11-05 17:18:02,478:INFO:Initializing compare_models()
2022-11-05 17:18:02,478:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-05 17:18:02,479:INFO:Checking exceptions
2022-11-05 17:18:02,484:INFO:Preparing display monitor
2022-11-05 17:18:02,487:INFO:Initializing Logistic Regression
2022-11-05 17:18:02,487:INFO:Total runtime is 0.0 minutes
2022-11-05 17:18:02,489:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:02,490:INFO:Initializing create_model()
2022-11-05 17:18:02,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:02,490:INFO:Checking exceptions
2022-11-05 17:18:02,494:INFO:Importing libraries
2022-11-05 17:18:02,494:INFO:Copying training dataset
2022-11-05 17:18:02,499:INFO:Defining folds
2022-11-05 17:18:02,499:INFO:Declaring metric variables
2022-11-05 17:18:02,499:INFO:Importing untrained model
2022-11-05 17:18:02,500:INFO:Logistic Regression Imported successfully
2022-11-05 17:18:02,500:INFO:Starting cross validation
2022-11-05 17:18:02,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:14,043:INFO:Calculating mean and std
2022-11-05 17:18:14,044:INFO:Creating metrics dataframe
2022-11-05 17:18:14,046:INFO:Uploading results into container
2022-11-05 17:18:14,046:INFO:Uploading model into container now
2022-11-05 17:18:14,046:INFO:master_model_container: 1
2022-11-05 17:18:14,046:INFO:display_container: 2
2022-11-05 17:18:14,046:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6754, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 17:18:14,046:INFO:create_model() successfully completed......................................
2022-11-05 17:18:14,245:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:14,245:INFO:Creating metrics dataframe
2022-11-05 17:18:14,245:INFO:Initializing K Neighbors Classifier
2022-11-05 17:18:14,245:INFO:Total runtime is 0.1959668517112732 minutes
2022-11-05 17:18:14,260:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:14,260:INFO:Initializing create_model()
2022-11-05 17:18:14,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:14,260:INFO:Checking exceptions
2022-11-05 17:18:14,265:INFO:Importing libraries
2022-11-05 17:18:14,265:INFO:Copying training dataset
2022-11-05 17:18:14,271:INFO:Defining folds
2022-11-05 17:18:14,272:INFO:Declaring metric variables
2022-11-05 17:18:14,272:INFO:Importing untrained model
2022-11-05 17:18:14,273:INFO:K Neighbors Classifier Imported successfully
2022-11-05 17:18:14,273:INFO:Starting cross validation
2022-11-05 17:18:14,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:15,704:INFO:Calculating mean and std
2022-11-05 17:18:15,706:INFO:Creating metrics dataframe
2022-11-05 17:18:15,712:INFO:Uploading results into container
2022-11-05 17:18:15,714:INFO:Uploading model into container now
2022-11-05 17:18:15,715:INFO:master_model_container: 2
2022-11-05 17:18:15,715:INFO:display_container: 2
2022-11-05 17:18:15,716:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-05 17:18:15,716:INFO:create_model() successfully completed......................................
2022-11-05 17:18:15,903:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:15,903:INFO:Creating metrics dataframe
2022-11-05 17:18:15,919:INFO:Initializing Naive Bayes
2022-11-05 17:18:15,919:INFO:Total runtime is 0.2238681674003601 minutes
2022-11-05 17:18:15,919:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:15,919:INFO:Initializing create_model()
2022-11-05 17:18:15,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:15,919:INFO:Checking exceptions
2022-11-05 17:18:15,919:INFO:Importing libraries
2022-11-05 17:18:15,919:INFO:Copying training dataset
2022-11-05 17:18:15,932:INFO:Defining folds
2022-11-05 17:18:15,932:INFO:Declaring metric variables
2022-11-05 17:18:15,932:INFO:Importing untrained model
2022-11-05 17:18:15,932:INFO:Naive Bayes Imported successfully
2022-11-05 17:18:15,932:INFO:Starting cross validation
2022-11-05 17:18:15,932:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:16,803:INFO:Calculating mean and std
2022-11-05 17:18:16,803:INFO:Creating metrics dataframe
2022-11-05 17:18:16,819:INFO:Uploading results into container
2022-11-05 17:18:16,819:INFO:Uploading model into container now
2022-11-05 17:18:16,819:INFO:master_model_container: 3
2022-11-05 17:18:16,819:INFO:display_container: 2
2022-11-05 17:18:16,819:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-05 17:18:16,819:INFO:create_model() successfully completed......................................
2022-11-05 17:18:16,975:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:16,975:INFO:Creating metrics dataframe
2022-11-05 17:18:16,980:INFO:Initializing Decision Tree Classifier
2022-11-05 17:18:16,980:INFO:Total runtime is 0.24156328439712524 minutes
2022-11-05 17:18:16,980:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:16,980:INFO:Initializing create_model()
2022-11-05 17:18:16,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:16,980:INFO:Checking exceptions
2022-11-05 17:18:16,982:INFO:Importing libraries
2022-11-05 17:18:16,982:INFO:Copying training dataset
2022-11-05 17:18:16,985:INFO:Defining folds
2022-11-05 17:18:16,986:INFO:Declaring metric variables
2022-11-05 17:18:16,986:INFO:Importing untrained model
2022-11-05 17:18:16,986:INFO:Decision Tree Classifier Imported successfully
2022-11-05 17:18:16,988:INFO:Starting cross validation
2022-11-05 17:18:16,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:17,888:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:17,894:INFO:Calculating mean and std
2022-11-05 17:18:17,895:INFO:Creating metrics dataframe
2022-11-05 17:18:17,901:INFO:Uploading results into container
2022-11-05 17:18:17,902:INFO:Uploading model into container now
2022-11-05 17:18:17,902:INFO:master_model_container: 4
2022-11-05 17:18:17,902:INFO:display_container: 2
2022-11-05 17:18:17,903:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6754, splitter='best')
2022-11-05 17:18:17,903:INFO:create_model() successfully completed......................................
2022-11-05 17:18:18,111:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:18,112:INFO:Creating metrics dataframe
2022-11-05 17:18:18,120:INFO:Initializing SVM - Linear Kernel
2022-11-05 17:18:18,120:INFO:Total runtime is 0.2605511983235677 minutes
2022-11-05 17:18:18,120:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:18,120:INFO:Initializing create_model()
2022-11-05 17:18:18,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:18,120:INFO:Checking exceptions
2022-11-05 17:18:18,120:INFO:Importing libraries
2022-11-05 17:18:18,120:INFO:Copying training dataset
2022-11-05 17:18:18,120:INFO:Defining folds
2022-11-05 17:18:18,120:INFO:Declaring metric variables
2022-11-05 17:18:18,120:INFO:Importing untrained model
2022-11-05 17:18:18,120:INFO:SVM - Linear Kernel Imported successfully
2022-11-05 17:18:18,120:INFO:Starting cross validation
2022-11-05 17:18:18,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:18,454:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:18,481:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:18,497:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:18,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:18,781:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:18,797:INFO:Calculating mean and std
2022-11-05 17:18:18,797:INFO:Creating metrics dataframe
2022-11-05 17:18:18,797:INFO:Uploading results into container
2022-11-05 17:18:18,797:INFO:Uploading model into container now
2022-11-05 17:18:18,797:INFO:master_model_container: 5
2022-11-05 17:18:18,797:INFO:display_container: 2
2022-11-05 17:18:18,797:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6754, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-05 17:18:18,797:INFO:create_model() successfully completed......................................
2022-11-05 17:18:18,999:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:18,999:INFO:Creating metrics dataframe
2022-11-05 17:18:18,999:INFO:Initializing Ridge Classifier
2022-11-05 17:18:18,999:INFO:Total runtime is 0.27520325978597004 minutes
2022-11-05 17:18:18,999:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:18,999:INFO:Initializing create_model()
2022-11-05 17:18:18,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:18,999:INFO:Checking exceptions
2022-11-05 17:18:18,999:INFO:Importing libraries
2022-11-05 17:18:18,999:INFO:Copying training dataset
2022-11-05 17:18:19,015:INFO:Defining folds
2022-11-05 17:18:19,015:INFO:Declaring metric variables
2022-11-05 17:18:19,015:INFO:Importing untrained model
2022-11-05 17:18:19,015:INFO:Ridge Classifier Imported successfully
2022-11-05 17:18:19,015:INFO:Starting cross validation
2022-11-05 17:18:19,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:19,679:INFO:Calculating mean and std
2022-11-05 17:18:19,680:INFO:Creating metrics dataframe
2022-11-05 17:18:19,685:INFO:Uploading results into container
2022-11-05 17:18:19,686:INFO:Uploading model into container now
2022-11-05 17:18:19,687:INFO:master_model_container: 6
2022-11-05 17:18:19,687:INFO:display_container: 2
2022-11-05 17:18:19,688:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=6754, solver='auto', tol=0.001)
2022-11-05 17:18:19,688:INFO:create_model() successfully completed......................................
2022-11-05 17:18:19,891:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:19,891:INFO:Creating metrics dataframe
2022-11-05 17:18:19,901:INFO:Initializing Random Forest Classifier
2022-11-05 17:18:19,902:INFO:Total runtime is 0.2902555187543233 minutes
2022-11-05 17:18:19,903:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:19,903:INFO:Initializing create_model()
2022-11-05 17:18:19,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:19,904:INFO:Checking exceptions
2022-11-05 17:18:19,907:INFO:Importing libraries
2022-11-05 17:18:19,908:INFO:Copying training dataset
2022-11-05 17:18:19,914:INFO:Defining folds
2022-11-05 17:18:19,914:INFO:Declaring metric variables
2022-11-05 17:18:19,914:INFO:Importing untrained model
2022-11-05 17:18:19,916:INFO:Random Forest Classifier Imported successfully
2022-11-05 17:18:19,916:INFO:Starting cross validation
2022-11-05 17:18:19,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:21,701:INFO:Calculating mean and std
2022-11-05 17:18:21,703:INFO:Creating metrics dataframe
2022-11-05 17:18:21,703:INFO:Uploading results into container
2022-11-05 17:18:21,703:INFO:Uploading model into container now
2022-11-05 17:18:21,703:INFO:master_model_container: 7
2022-11-05 17:18:21,703:INFO:display_container: 2
2022-11-05 17:18:21,703:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6754, verbose=0, warm_start=False)
2022-11-05 17:18:21,703:INFO:create_model() successfully completed......................................
2022-11-05 17:18:21,918:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:21,918:INFO:Creating metrics dataframe
2022-11-05 17:18:21,934:INFO:Initializing Quadratic Discriminant Analysis
2022-11-05 17:18:21,934:INFO:Total runtime is 0.3241162896156311 minutes
2022-11-05 17:18:21,934:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:21,934:INFO:Initializing create_model()
2022-11-05 17:18:21,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:21,934:INFO:Checking exceptions
2022-11-05 17:18:21,942:INFO:Importing libraries
2022-11-05 17:18:21,942:INFO:Copying training dataset
2022-11-05 17:18:21,950:INFO:Defining folds
2022-11-05 17:18:21,950:INFO:Declaring metric variables
2022-11-05 17:18:21,950:INFO:Importing untrained model
2022-11-05 17:18:21,950:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-05 17:18:21,952:INFO:Starting cross validation
2022-11-05 17:18:21,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:22,219:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,222:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,243:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,255:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,255:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,305:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,319:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,735:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:22,735:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:18:23,069:INFO:Calculating mean and std
2022-11-05 17:18:23,070:INFO:Creating metrics dataframe
2022-11-05 17:18:23,076:INFO:Uploading results into container
2022-11-05 17:18:23,077:INFO:Uploading model into container now
2022-11-05 17:18:23,078:INFO:master_model_container: 8
2022-11-05 17:18:23,078:INFO:display_container: 2
2022-11-05 17:18:23,079:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-05 17:18:23,079:INFO:create_model() successfully completed......................................
2022-11-05 17:18:23,302:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:23,302:INFO:Creating metrics dataframe
2022-11-05 17:18:23,314:INFO:Initializing Ada Boost Classifier
2022-11-05 17:18:23,315:INFO:Total runtime is 0.34713368813196815 minutes
2022-11-05 17:18:23,316:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:23,317:INFO:Initializing create_model()
2022-11-05 17:18:23,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:23,317:INFO:Checking exceptions
2022-11-05 17:18:23,322:INFO:Importing libraries
2022-11-05 17:18:23,322:INFO:Copying training dataset
2022-11-05 17:18:23,329:INFO:Defining folds
2022-11-05 17:18:23,329:INFO:Declaring metric variables
2022-11-05 17:18:23,329:INFO:Importing untrained model
2022-11-05 17:18:23,330:INFO:Ada Boost Classifier Imported successfully
2022-11-05 17:18:23,330:INFO:Starting cross validation
2022-11-05 17:18:23,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:24,051:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:24,812:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:24,827:INFO:Calculating mean and std
2022-11-05 17:18:24,843:INFO:Creating metrics dataframe
2022-11-05 17:18:24,848:INFO:Uploading results into container
2022-11-05 17:18:24,848:INFO:Uploading model into container now
2022-11-05 17:18:24,848:INFO:master_model_container: 9
2022-11-05 17:18:24,848:INFO:display_container: 2
2022-11-05 17:18:24,848:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6754)
2022-11-05 17:18:24,848:INFO:create_model() successfully completed......................................
2022-11-05 17:18:25,048:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:25,048:INFO:Creating metrics dataframe
2022-11-05 17:18:25,063:INFO:Initializing Gradient Boosting Classifier
2022-11-05 17:18:25,063:INFO:Total runtime is 0.3762720902760823 minutes
2022-11-05 17:18:25,063:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:25,064:INFO:Initializing create_model()
2022-11-05 17:18:25,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:25,064:INFO:Checking exceptions
2022-11-05 17:18:25,066:INFO:Importing libraries
2022-11-05 17:18:25,066:INFO:Copying training dataset
2022-11-05 17:18:25,072:INFO:Defining folds
2022-11-05 17:18:25,072:INFO:Declaring metric variables
2022-11-05 17:18:25,072:INFO:Importing untrained model
2022-11-05 17:18:25,073:INFO:Gradient Boosting Classifier Imported successfully
2022-11-05 17:18:25,073:INFO:Starting cross validation
2022-11-05 17:18:25,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:25,804:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:26,750:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:26,750:INFO:Calculating mean and std
2022-11-05 17:18:26,766:INFO:Creating metrics dataframe
2022-11-05 17:18:26,766:INFO:Uploading results into container
2022-11-05 17:18:26,766:INFO:Uploading model into container now
2022-11-05 17:18:26,766:INFO:master_model_container: 10
2022-11-05 17:18:26,766:INFO:display_container: 2
2022-11-05 17:18:26,766:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6754, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-05 17:18:26,766:INFO:create_model() successfully completed......................................
2022-11-05 17:18:26,950:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:26,966:INFO:Creating metrics dataframe
2022-11-05 17:18:26,966:INFO:Initializing Linear Discriminant Analysis
2022-11-05 17:18:26,966:INFO:Total runtime is 0.4079897920290629 minutes
2022-11-05 17:18:26,966:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:26,966:INFO:Initializing create_model()
2022-11-05 17:18:26,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:26,966:INFO:Checking exceptions
2022-11-05 17:18:26,966:INFO:Importing libraries
2022-11-05 17:18:26,966:INFO:Copying training dataset
2022-11-05 17:18:26,966:INFO:Defining folds
2022-11-05 17:18:26,966:INFO:Declaring metric variables
2022-11-05 17:18:26,966:INFO:Importing untrained model
2022-11-05 17:18:26,966:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 17:18:26,966:INFO:Starting cross validation
2022-11-05 17:18:26,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:28,023:INFO:Calculating mean and std
2022-11-05 17:18:28,023:INFO:Creating metrics dataframe
2022-11-05 17:18:28,023:INFO:Uploading results into container
2022-11-05 17:18:28,023:INFO:Uploading model into container now
2022-11-05 17:18:28,023:INFO:master_model_container: 11
2022-11-05 17:18:28,023:INFO:display_container: 2
2022-11-05 17:18:28,023:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 17:18:28,023:INFO:create_model() successfully completed......................................
2022-11-05 17:18:28,258:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:28,258:INFO:Creating metrics dataframe
2022-11-05 17:18:28,258:INFO:Initializing Extra Trees Classifier
2022-11-05 17:18:28,258:INFO:Total runtime is 0.4295212109883626 minutes
2022-11-05 17:18:28,258:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:28,258:INFO:Initializing create_model()
2022-11-05 17:18:28,258:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:28,258:INFO:Checking exceptions
2022-11-05 17:18:28,277:INFO:Importing libraries
2022-11-05 17:18:28,277:INFO:Copying training dataset
2022-11-05 17:18:28,283:INFO:Defining folds
2022-11-05 17:18:28,283:INFO:Declaring metric variables
2022-11-05 17:18:28,283:INFO:Importing untrained model
2022-11-05 17:18:28,284:INFO:Extra Trees Classifier Imported successfully
2022-11-05 17:18:28,284:INFO:Starting cross validation
2022-11-05 17:18:28,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:30,156:INFO:Calculating mean and std
2022-11-05 17:18:30,156:INFO:Creating metrics dataframe
2022-11-05 17:18:30,156:INFO:Uploading results into container
2022-11-05 17:18:30,156:INFO:Uploading model into container now
2022-11-05 17:18:30,156:INFO:master_model_container: 12
2022-11-05 17:18:30,156:INFO:display_container: 2
2022-11-05 17:18:30,156:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6754, verbose=0, warm_start=False)
2022-11-05 17:18:30,156:INFO:create_model() successfully completed......................................
2022-11-05 17:18:30,367:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:30,367:INFO:Creating metrics dataframe
2022-11-05 17:18:30,367:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 17:18:30,367:INFO:Total runtime is 0.46466609239578244 minutes
2022-11-05 17:18:30,367:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:30,367:INFO:Initializing create_model()
2022-11-05 17:18:30,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:30,367:INFO:Checking exceptions
2022-11-05 17:18:30,367:INFO:Importing libraries
2022-11-05 17:18:30,367:INFO:Copying training dataset
2022-11-05 17:18:30,382:INFO:Defining folds
2022-11-05 17:18:30,382:INFO:Declaring metric variables
2022-11-05 17:18:30,382:INFO:Importing untrained model
2022-11-05 17:18:30,382:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 17:18:30,382:INFO:Starting cross validation
2022-11-05 17:18:30,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:34,294:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:34,896:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:34,916:INFO:Calculating mean and std
2022-11-05 17:18:34,916:INFO:Creating metrics dataframe
2022-11-05 17:18:34,916:INFO:Uploading results into container
2022-11-05 17:18:34,916:INFO:Uploading model into container now
2022-11-05 17:18:34,916:INFO:master_model_container: 13
2022-11-05 17:18:34,916:INFO:display_container: 2
2022-11-05 17:18:34,916:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6754, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-05 17:18:34,916:INFO:create_model() successfully completed......................................
2022-11-05 17:18:35,150:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:35,150:INFO:Creating metrics dataframe
2022-11-05 17:18:35,166:INFO:Initializing Dummy Classifier
2022-11-05 17:18:35,166:INFO:Total runtime is 0.5446591575940449 minutes
2022-11-05 17:18:35,166:INFO:SubProcess create_model() called ==================================
2022-11-05 17:18:35,166:INFO:Initializing create_model()
2022-11-05 17:18:35,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FF128700>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:35,166:INFO:Checking exceptions
2022-11-05 17:18:35,166:INFO:Importing libraries
2022-11-05 17:18:35,166:INFO:Copying training dataset
2022-11-05 17:18:35,166:INFO:Defining folds
2022-11-05 17:18:35,166:INFO:Declaring metric variables
2022-11-05 17:18:35,166:INFO:Importing untrained model
2022-11-05 17:18:35,166:INFO:Dummy Classifier Imported successfully
2022-11-05 17:18:35,166:INFO:Starting cross validation
2022-11-05 17:18:35,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:18:35,557:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,565:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,568:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,583:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,615:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,615:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,615:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:35,631:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:36,134:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:36,135:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:18:36,148:INFO:Calculating mean and std
2022-11-05 17:18:36,150:INFO:Creating metrics dataframe
2022-11-05 17:18:36,156:INFO:Uploading results into container
2022-11-05 17:18:36,156:INFO:Uploading model into container now
2022-11-05 17:18:36,163:INFO:master_model_container: 14
2022-11-05 17:18:36,163:INFO:display_container: 2
2022-11-05 17:18:36,163:INFO:DummyClassifier(constant=None, random_state=6754, strategy='prior')
2022-11-05 17:18:36,163:INFO:create_model() successfully completed......................................
2022-11-05 17:18:36,397:INFO:SubProcess create_model() end ==================================
2022-11-05 17:18:36,398:INFO:Creating metrics dataframe
2022-11-05 17:18:36,401:INFO:Initializing create_model()
2022-11-05 17:18:36,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118FE4A9D00>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:18:36,401:INFO:Checking exceptions
2022-11-05 17:18:36,401:INFO:Importing libraries
2022-11-05 17:18:36,401:INFO:Copying training dataset
2022-11-05 17:18:36,417:INFO:Defining folds
2022-11-05 17:18:36,417:INFO:Declaring metric variables
2022-11-05 17:18:36,417:INFO:Importing untrained model
2022-11-05 17:18:36,417:INFO:Declaring custom model
2022-11-05 17:18:36,417:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 17:18:36,417:INFO:Cross validation set to False
2022-11-05 17:18:36,417:INFO:Fitting Model
2022-11-05 17:18:37,017:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 17:18:37,017:INFO:create_model() successfully completed......................................
2022-11-05 17:18:37,195:INFO:master_model_container: 14
2022-11-05 17:18:37,195:INFO:display_container: 2
2022-11-05 17:18:37,195:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 17:18:37,195:INFO:compare_models() successfully completed......................................
2022-11-05 17:19:46,220:INFO:PyCaret ClassificationExperiment
2022-11-05 17:19:46,220:INFO:Logging name: clf-default-name
2022-11-05 17:19:46,220:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-05 17:19:46,220:INFO:version 3.0.0.rc4
2022-11-05 17:19:46,220:INFO:Initializing setup()
2022-11-05 17:19:46,220:INFO:self.USI: 6756
2022-11-05 17:19:46,220:INFO:self.variable_keys: {'memory', 'exp_name_log', 'gpu_param', 'USI', 'pipeline', '_available_plots', '_is_multiclass', 'X_train', '_gpu_n_jobs_param', 'n_jobs_param', 'master_model_container', 'y_test', 'fix_imbalance', '_all_models', 'y_train', 'fold_groups_param', '_all_metrics', 'exp_id', '_ml_usecase', 'data', 'X', 'fold_shuffle_param', 'fold_generator', 'display_container', 'log_plots_param', 'logging_param', 'X_test', 'html_param', 'variable_keys', 'target_param', 'y', 'seed', '_all_models_internal', 'idx'}
2022-11-05 17:19:46,220:INFO:Checking environment
2022-11-05 17:19:46,220:INFO:python_version: 3.9.13
2022-11-05 17:19:46,220:INFO:python_build: ('main', 'Oct 13 2022 21:23:06')
2022-11-05 17:19:46,221:INFO:machine: AMD64
2022-11-05 17:19:46,221:INFO:platform: Windows-10-10.0.22000-SP0
2022-11-05 17:19:46,221:INFO:Memory: svmem(total=8277590016, available=1219207168, percent=85.3, used=7058382848, free=1219207168)
2022-11-05 17:19:46,221:INFO:Physical Core: 4
2022-11-05 17:19:46,221:INFO:Logical Core: 8
2022-11-05 17:19:46,221:INFO:Checking libraries
2022-11-05 17:19:46,221:INFO:System:
2022-11-05 17:19:46,221:INFO:    python: 3.9.13 (main, Oct 13 2022, 21:23:06) [MSC v.1916 64 bit (AMD64)]
2022-11-05 17:19:46,221:INFO:executable: C:\Users\ranji\anaconda3\python.exe
2022-11-05 17:19:46,221:INFO:   machine: Windows-10-10.0.22000-SP0
2022-11-05 17:19:46,221:INFO:PyCaret required dependencies:
2022-11-05 17:19:46,221:INFO:                 pip: 22.2.2
2022-11-05 17:19:46,221:INFO:          setuptools: 65.5.0
2022-11-05 17:19:46,221:INFO:             pycaret: 3.0.0rc4
2022-11-05 17:19:46,221:INFO:             IPython: 7.31.1
2022-11-05 17:19:46,221:INFO:          ipywidgets: 7.6.5
2022-11-05 17:19:46,221:INFO:                tqdm: 4.64.1
2022-11-05 17:19:46,221:INFO:               numpy: 1.21.5
2022-11-05 17:19:46,221:INFO:              pandas: 1.4.4
2022-11-05 17:19:46,221:INFO:              jinja2: 2.11.3
2022-11-05 17:19:46,221:INFO:               scipy: 1.9.3
2022-11-05 17:19:46,221:INFO:              joblib: 1.1.1
2022-11-05 17:19:46,221:INFO:             sklearn: 1.1.3
2022-11-05 17:19:46,221:INFO:                pyod: 1.0.6
2022-11-05 17:19:46,221:INFO:            imblearn: 0.9.1
2022-11-05 17:19:46,222:INFO:   category_encoders: 2.5.1.post0
2022-11-05 17:19:46,222:INFO:            lightgbm: 3.3.3
2022-11-05 17:19:46,222:INFO:               numba: 0.56.3
2022-11-05 17:19:46,222:INFO:            requests: 2.28.1
2022-11-05 17:19:46,222:INFO:          matplotlib: 3.5.3
2022-11-05 17:19:46,222:INFO:          scikitplot: 0.3.7
2022-11-05 17:19:46,222:INFO:         yellowbrick: 1.5
2022-11-05 17:19:46,222:INFO:              plotly: 5.9.0
2022-11-05 17:19:46,222:INFO:             kaleido: 0.2.1
2022-11-05 17:19:46,222:INFO:         statsmodels: 0.13.2
2022-11-05 17:19:46,222:INFO:              sktime: 0.13.4
2022-11-05 17:19:46,222:INFO:               tbats: 1.1.1
2022-11-05 17:19:46,222:INFO:            pmdarima: 1.8.5
2022-11-05 17:19:46,222:INFO:              psutil: 5.9.0
2022-11-05 17:19:46,222:INFO:PyCaret optional dependencies:
2022-11-05 17:19:46,222:INFO:                shap: Not installed
2022-11-05 17:19:46,222:INFO:           interpret: Not installed
2022-11-05 17:19:46,222:INFO:                umap: Not installed
2022-11-05 17:19:46,222:INFO:    pandas_profiling: 3.4.0
2022-11-05 17:19:46,222:INFO:  explainerdashboard: Not installed
2022-11-05 17:19:46,222:INFO:             autoviz: Not installed
2022-11-05 17:19:46,222:INFO:           fairlearn: Not installed
2022-11-05 17:19:46,222:INFO:             xgboost: Not installed
2022-11-05 17:19:46,222:INFO:            catboost: Not installed
2022-11-05 17:19:46,222:INFO:              kmodes: Not installed
2022-11-05 17:19:46,222:INFO:             mlxtend: Not installed
2022-11-05 17:19:46,222:INFO:       statsforecast: Not installed
2022-11-05 17:19:46,222:INFO:        tune_sklearn: Not installed
2022-11-05 17:19:46,222:INFO:                 ray: Not installed
2022-11-05 17:19:46,222:INFO:            hyperopt: Not installed
2022-11-05 17:19:46,222:INFO:              optuna: Not installed
2022-11-05 17:19:46,222:INFO:               skopt: Not installed
2022-11-05 17:19:46,222:INFO:              mlflow: Not installed
2022-11-05 17:19:46,223:INFO:              gradio: Not installed
2022-11-05 17:19:46,223:INFO:             fastapi: Not installed
2022-11-05 17:19:46,223:INFO:             uvicorn: Not installed
2022-11-05 17:19:46,223:INFO:              m2cgen: Not installed
2022-11-05 17:19:46,223:INFO:           evidently: Not installed
2022-11-05 17:19:46,223:INFO:                nltk: 3.7
2022-11-05 17:19:46,223:INFO:            pyLDAvis: Not installed
2022-11-05 17:19:46,223:INFO:              gensim: 4.1.2
2022-11-05 17:19:46,223:INFO:               spacy: Not installed
2022-11-05 17:19:46,223:INFO:           wordcloud: Not installed
2022-11-05 17:19:46,223:INFO:            textblob: Not installed
2022-11-05 17:19:46,223:INFO:               fugue: Not installed
2022-11-05 17:19:46,223:INFO:           streamlit: 1.14.0
2022-11-05 17:19:46,223:INFO:             prophet: Not installed
2022-11-05 17:19:46,223:INFO:None
2022-11-05 17:19:46,223:INFO:Set up data.
2022-11-05 17:19:46,236:INFO:Set up train/test split.
2022-11-05 17:19:46,245:INFO:Set up index.
2022-11-05 17:19:46,246:INFO:Assigning column types.
2022-11-05 17:19:46,250:INFO:Set up folding strategy.
2022-11-05 17:19:46,251:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-05 17:19:46,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,398:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-05 17:19:46,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,540:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-05 17:19:46,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,592:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-05 17:19:46,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:46,801:INFO:Preparing preprocessing pipeline...
2022-11-05 17:19:46,801:INFO:Set up label encoding.
2022-11-05 17:19:46,801:INFO:Set up simple imputation.
2022-11-05 17:19:46,801:INFO:Set up encoding of ordinal features.
2022-11-05 17:19:46,801:INFO:Set up encoding of categorical features.
2022-11-05 17:19:46,801:INFO:Set up variance threshold.
2022-11-05 17:19:47,503:INFO:Finished creating preprocessing pipeline.
2022-11-05 17:19:47,519:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4877,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-05 17:19:47,519:INFO:Creating final display dataframe.
2022-11-05 17:19:49,699:INFO:Setup display_container:                     Description             Value
0                    Session id              4877
1                        Target           default
2                   Target type            Binary
3                Target mapping        1: 0, 2: 1
4           Original data shape        (1000, 21)
5        Transformed data shape        (1000, 51)
6   Transformed train set shape         (699, 51)
7    Transformed test set shape         (301, 51)
8              Ordinal features                 2
9              Numeric features                 7
10         Categorical features                13
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation          constant
15     Maximum one-hot encoding                 5
16              Encoding method              None
17       Low variance threshold                 0
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              6756
2022-11-05 17:19:49,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:49,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:49,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:49,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-05 17:19:49,938:INFO:setup() successfully completed in 3.72s...............
2022-11-05 17:19:49,954:INFO:Initializing compare_models()
2022-11-05 17:19:49,954:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-05 17:19:49,955:INFO:Checking exceptions
2022-11-05 17:19:49,962:INFO:Preparing display monitor
2022-11-05 17:19:49,966:INFO:Initializing Logistic Regression
2022-11-05 17:19:49,967:INFO:Total runtime is 1.6661485036214194e-05 minutes
2022-11-05 17:19:49,967:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:49,967:INFO:Initializing create_model()
2022-11-05 17:19:49,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:49,968:INFO:Checking exceptions
2022-11-05 17:19:49,972:INFO:Importing libraries
2022-11-05 17:19:49,972:INFO:Copying training dataset
2022-11-05 17:19:49,981:INFO:Defining folds
2022-11-05 17:19:49,982:INFO:Declaring metric variables
2022-11-05 17:19:49,982:INFO:Importing untrained model
2022-11-05 17:19:49,982:INFO:Logistic Regression Imported successfully
2022-11-05 17:19:49,982:INFO:Starting cross validation
2022-11-05 17:19:49,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:54,440:INFO:Calculating mean and std
2022-11-05 17:19:54,440:INFO:Creating metrics dataframe
2022-11-05 17:19:54,444:INFO:Uploading results into container
2022-11-05 17:19:54,445:INFO:Uploading model into container now
2022-11-05 17:19:54,445:INFO:master_model_container: 1
2022-11-05 17:19:54,445:INFO:display_container: 2
2022-11-05 17:19:54,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4877, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-05 17:19:54,446:INFO:create_model() successfully completed......................................
2022-11-05 17:19:54,697:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:54,697:INFO:Creating metrics dataframe
2022-11-05 17:19:54,702:INFO:Initializing K Neighbors Classifier
2022-11-05 17:19:54,702:INFO:Total runtime is 0.07893920342127483 minutes
2022-11-05 17:19:54,702:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:54,702:INFO:Initializing create_model()
2022-11-05 17:19:54,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:54,702:INFO:Checking exceptions
2022-11-05 17:19:54,705:INFO:Importing libraries
2022-11-05 17:19:54,706:INFO:Copying training dataset
2022-11-05 17:19:54,710:INFO:Defining folds
2022-11-05 17:19:54,710:INFO:Declaring metric variables
2022-11-05 17:19:54,710:INFO:Importing untrained model
2022-11-05 17:19:54,711:INFO:K Neighbors Classifier Imported successfully
2022-11-05 17:19:54,711:INFO:Starting cross validation
2022-11-05 17:19:54,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:55,891:INFO:Calculating mean and std
2022-11-05 17:19:55,891:INFO:Creating metrics dataframe
2022-11-05 17:19:55,891:INFO:Uploading results into container
2022-11-05 17:19:55,906:INFO:Uploading model into container now
2022-11-05 17:19:55,906:INFO:master_model_container: 2
2022-11-05 17:19:55,906:INFO:display_container: 2
2022-11-05 17:19:55,908:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-05 17:19:55,908:INFO:create_model() successfully completed......................................
2022-11-05 17:19:56,114:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:56,114:INFO:Creating metrics dataframe
2022-11-05 17:19:56,125:INFO:Initializing Naive Bayes
2022-11-05 17:19:56,125:INFO:Total runtime is 0.10264326731363933 minutes
2022-11-05 17:19:56,125:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:56,125:INFO:Initializing create_model()
2022-11-05 17:19:56,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:56,125:INFO:Checking exceptions
2022-11-05 17:19:56,125:INFO:Importing libraries
2022-11-05 17:19:56,125:INFO:Copying training dataset
2022-11-05 17:19:56,125:INFO:Defining folds
2022-11-05 17:19:56,125:INFO:Declaring metric variables
2022-11-05 17:19:56,125:INFO:Importing untrained model
2022-11-05 17:19:56,125:INFO:Naive Bayes Imported successfully
2022-11-05 17:19:56,125:INFO:Starting cross validation
2022-11-05 17:19:56,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:56,835:INFO:Calculating mean and std
2022-11-05 17:19:56,836:INFO:Creating metrics dataframe
2022-11-05 17:19:56,841:INFO:Uploading results into container
2022-11-05 17:19:56,842:INFO:Uploading model into container now
2022-11-05 17:19:56,842:INFO:master_model_container: 3
2022-11-05 17:19:56,842:INFO:display_container: 2
2022-11-05 17:19:56,842:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-05 17:19:56,842:INFO:create_model() successfully completed......................................
2022-11-05 17:19:57,023:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:57,023:INFO:Creating metrics dataframe
2022-11-05 17:19:57,023:INFO:Initializing Decision Tree Classifier
2022-11-05 17:19:57,023:INFO:Total runtime is 0.11761622428894045 minutes
2022-11-05 17:19:57,023:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:57,023:INFO:Initializing create_model()
2022-11-05 17:19:57,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:57,023:INFO:Checking exceptions
2022-11-05 17:19:57,042:INFO:Importing libraries
2022-11-05 17:19:57,043:INFO:Copying training dataset
2022-11-05 17:19:57,046:INFO:Defining folds
2022-11-05 17:19:57,047:INFO:Declaring metric variables
2022-11-05 17:19:57,047:INFO:Importing untrained model
2022-11-05 17:19:57,048:INFO:Decision Tree Classifier Imported successfully
2022-11-05 17:19:57,048:INFO:Starting cross validation
2022-11-05 17:19:57,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:57,771:INFO:Calculating mean and std
2022-11-05 17:19:57,771:INFO:Creating metrics dataframe
2022-11-05 17:19:57,771:INFO:Uploading results into container
2022-11-05 17:19:57,771:INFO:Uploading model into container now
2022-11-05 17:19:57,771:INFO:master_model_container: 4
2022-11-05 17:19:57,771:INFO:display_container: 2
2022-11-05 17:19:57,771:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4877, splitter='best')
2022-11-05 17:19:57,771:INFO:create_model() successfully completed......................................
2022-11-05 17:19:57,986:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:57,986:INFO:Creating metrics dataframe
2022-11-05 17:19:58,002:INFO:Initializing SVM - Linear Kernel
2022-11-05 17:19:58,002:INFO:Total runtime is 0.1339267412821452 minutes
2022-11-05 17:19:58,002:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:58,002:INFO:Initializing create_model()
2022-11-05 17:19:58,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:58,002:INFO:Checking exceptions
2022-11-05 17:19:58,002:INFO:Importing libraries
2022-11-05 17:19:58,002:INFO:Copying training dataset
2022-11-05 17:19:58,002:INFO:Defining folds
2022-11-05 17:19:58,002:INFO:Declaring metric variables
2022-11-05 17:19:58,002:INFO:Importing untrained model
2022-11-05 17:19:58,012:INFO:SVM - Linear Kernel Imported successfully
2022-11-05 17:19:58,012:INFO:Starting cross validation
2022-11-05 17:19:58,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:58,340:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,348:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,348:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,368:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,374:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,390:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,554:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,571:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:19:58,571:INFO:Calculating mean and std
2022-11-05 17:19:58,571:INFO:Creating metrics dataframe
2022-11-05 17:19:58,571:INFO:Uploading results into container
2022-11-05 17:19:58,571:INFO:Uploading model into container now
2022-11-05 17:19:58,571:INFO:master_model_container: 5
2022-11-05 17:19:58,571:INFO:display_container: 2
2022-11-05 17:19:58,587:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4877, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-05 17:19:58,588:INFO:create_model() successfully completed......................................
2022-11-05 17:19:58,835:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:58,835:INFO:Creating metrics dataframe
2022-11-05 17:19:58,846:INFO:Initializing Ridge Classifier
2022-11-05 17:19:58,846:INFO:Total runtime is 0.14800186951955163 minutes
2022-11-05 17:19:58,847:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:58,847:INFO:Initializing create_model()
2022-11-05 17:19:58,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:58,848:INFO:Checking exceptions
2022-11-05 17:19:58,851:INFO:Importing libraries
2022-11-05 17:19:58,852:INFO:Copying training dataset
2022-11-05 17:19:58,858:INFO:Defining folds
2022-11-05 17:19:58,859:INFO:Declaring metric variables
2022-11-05 17:19:58,859:INFO:Importing untrained model
2022-11-05 17:19:58,861:INFO:Ridge Classifier Imported successfully
2022-11-05 17:19:58,861:INFO:Starting cross validation
2022-11-05 17:19:58,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:19:59,435:INFO:Calculating mean and std
2022-11-05 17:19:59,436:INFO:Creating metrics dataframe
2022-11-05 17:19:59,441:INFO:Uploading results into container
2022-11-05 17:19:59,442:INFO:Uploading model into container now
2022-11-05 17:19:59,442:INFO:master_model_container: 6
2022-11-05 17:19:59,442:INFO:display_container: 2
2022-11-05 17:19:59,443:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=4877, solver='auto', tol=0.001)
2022-11-05 17:19:59,443:INFO:create_model() successfully completed......................................
2022-11-05 17:19:59,646:INFO:SubProcess create_model() end ==================================
2022-11-05 17:19:59,646:INFO:Creating metrics dataframe
2022-11-05 17:19:59,654:INFO:Initializing Random Forest Classifier
2022-11-05 17:19:59,654:INFO:Total runtime is 0.1614731589953105 minutes
2022-11-05 17:19:59,654:INFO:SubProcess create_model() called ==================================
2022-11-05 17:19:59,655:INFO:Initializing create_model()
2022-11-05 17:19:59,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:19:59,655:INFO:Checking exceptions
2022-11-05 17:19:59,657:INFO:Importing libraries
2022-11-05 17:19:59,657:INFO:Copying training dataset
2022-11-05 17:19:59,660:INFO:Defining folds
2022-11-05 17:19:59,660:INFO:Declaring metric variables
2022-11-05 17:19:59,660:INFO:Importing untrained model
2022-11-05 17:19:59,661:INFO:Random Forest Classifier Imported successfully
2022-11-05 17:19:59,661:INFO:Starting cross validation
2022-11-05 17:19:59,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:01,037:INFO:Calculating mean and std
2022-11-05 17:20:01,038:INFO:Creating metrics dataframe
2022-11-05 17:20:01,046:INFO:Uploading results into container
2022-11-05 17:20:01,047:INFO:Uploading model into container now
2022-11-05 17:20:01,048:INFO:master_model_container: 7
2022-11-05 17:20:01,048:INFO:display_container: 2
2022-11-05 17:20:01,049:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4877, verbose=0, warm_start=False)
2022-11-05 17:20:01,049:INFO:create_model() successfully completed......................................
2022-11-05 17:20:01,255:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:01,255:INFO:Creating metrics dataframe
2022-11-05 17:20:01,265:INFO:Initializing Quadratic Discriminant Analysis
2022-11-05 17:20:01,265:INFO:Total runtime is 0.188312844435374 minutes
2022-11-05 17:20:01,266:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:01,266:INFO:Initializing create_model()
2022-11-05 17:20:01,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:01,267:INFO:Checking exceptions
2022-11-05 17:20:01,271:INFO:Importing libraries
2022-11-05 17:20:01,271:INFO:Copying training dataset
2022-11-05 17:20:01,274:INFO:Defining folds
2022-11-05 17:20:01,274:INFO:Declaring metric variables
2022-11-05 17:20:01,274:INFO:Importing untrained model
2022-11-05 17:20:01,274:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-05 17:20:01,274:INFO:Starting cross validation
2022-11-05 17:20:01,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:01,490:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,516:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,521:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,521:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,535:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,535:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,535:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,535:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,821:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,821:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-05 17:20:01,988:INFO:Calculating mean and std
2022-11-05 17:20:01,988:INFO:Creating metrics dataframe
2022-11-05 17:20:01,988:INFO:Uploading results into container
2022-11-05 17:20:01,988:INFO:Uploading model into container now
2022-11-05 17:20:01,988:INFO:master_model_container: 8
2022-11-05 17:20:01,988:INFO:display_container: 2
2022-11-05 17:20:01,988:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-05 17:20:01,988:INFO:create_model() successfully completed......................................
2022-11-05 17:20:02,188:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:02,188:INFO:Creating metrics dataframe
2022-11-05 17:20:02,203:INFO:Initializing Ada Boost Classifier
2022-11-05 17:20:02,203:INFO:Total runtime is 0.20395303964614875 minutes
2022-11-05 17:20:02,203:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:02,203:INFO:Initializing create_model()
2022-11-05 17:20:02,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:02,203:INFO:Checking exceptions
2022-11-05 17:20:02,203:INFO:Importing libraries
2022-11-05 17:20:02,203:INFO:Copying training dataset
2022-11-05 17:20:02,217:INFO:Defining folds
2022-11-05 17:20:02,217:INFO:Declaring metric variables
2022-11-05 17:20:02,217:INFO:Importing untrained model
2022-11-05 17:20:02,217:INFO:Ada Boost Classifier Imported successfully
2022-11-05 17:20:02,219:INFO:Starting cross validation
2022-11-05 17:20:02,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:03,153:INFO:Calculating mean and std
2022-11-05 17:20:03,153:INFO:Creating metrics dataframe
2022-11-05 17:20:03,168:INFO:Uploading results into container
2022-11-05 17:20:03,168:INFO:Uploading model into container now
2022-11-05 17:20:03,168:INFO:master_model_container: 9
2022-11-05 17:20:03,168:INFO:display_container: 2
2022-11-05 17:20:03,168:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4877)
2022-11-05 17:20:03,168:INFO:create_model() successfully completed......................................
2022-11-05 17:20:03,367:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:03,367:INFO:Creating metrics dataframe
2022-11-05 17:20:03,367:INFO:Initializing Gradient Boosting Classifier
2022-11-05 17:20:03,367:INFO:Total runtime is 0.22335305611292527 minutes
2022-11-05 17:20:03,367:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:03,367:INFO:Initializing create_model()
2022-11-05 17:20:03,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:03,367:INFO:Checking exceptions
2022-11-05 17:20:03,383:INFO:Importing libraries
2022-11-05 17:20:03,383:INFO:Copying training dataset
2022-11-05 17:20:03,383:INFO:Defining folds
2022-11-05 17:20:03,383:INFO:Declaring metric variables
2022-11-05 17:20:03,383:INFO:Importing untrained model
2022-11-05 17:20:03,383:INFO:Gradient Boosting Classifier Imported successfully
2022-11-05 17:20:03,383:INFO:Starting cross validation
2022-11-05 17:20:03,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:04,385:INFO:Calculating mean and std
2022-11-05 17:20:04,401:INFO:Creating metrics dataframe
2022-11-05 17:20:04,401:INFO:Uploading results into container
2022-11-05 17:20:04,401:INFO:Uploading model into container now
2022-11-05 17:20:04,401:INFO:master_model_container: 10
2022-11-05 17:20:04,401:INFO:display_container: 2
2022-11-05 17:20:04,401:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4877, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-05 17:20:04,401:INFO:create_model() successfully completed......................................
2022-11-05 17:20:04,599:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:04,599:INFO:Creating metrics dataframe
2022-11-05 17:20:04,599:INFO:Initializing Linear Discriminant Analysis
2022-11-05 17:20:04,599:INFO:Total runtime is 0.24388974507649747 minutes
2022-11-05 17:20:04,599:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:04,615:INFO:Initializing create_model()
2022-11-05 17:20:04,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:04,615:INFO:Checking exceptions
2022-11-05 17:20:04,615:INFO:Importing libraries
2022-11-05 17:20:04,615:INFO:Copying training dataset
2022-11-05 17:20:04,620:INFO:Defining folds
2022-11-05 17:20:04,620:INFO:Declaring metric variables
2022-11-05 17:20:04,620:INFO:Importing untrained model
2022-11-05 17:20:04,620:INFO:Linear Discriminant Analysis Imported successfully
2022-11-05 17:20:04,620:INFO:Starting cross validation
2022-11-05 17:20:04,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:05,383:INFO:Calculating mean and std
2022-11-05 17:20:05,383:INFO:Creating metrics dataframe
2022-11-05 17:20:05,383:INFO:Uploading results into container
2022-11-05 17:20:05,383:INFO:Uploading model into container now
2022-11-05 17:20:05,383:INFO:master_model_container: 11
2022-11-05 17:20:05,383:INFO:display_container: 2
2022-11-05 17:20:05,383:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-05 17:20:05,383:INFO:create_model() successfully completed......................................
2022-11-05 17:20:05,584:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:05,584:INFO:Creating metrics dataframe
2022-11-05 17:20:05,599:INFO:Initializing Extra Trees Classifier
2022-11-05 17:20:05,599:INFO:Total runtime is 0.2605528076489767 minutes
2022-11-05 17:20:05,599:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:05,599:INFO:Initializing create_model()
2022-11-05 17:20:05,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:05,599:INFO:Checking exceptions
2022-11-05 17:20:05,599:INFO:Importing libraries
2022-11-05 17:20:05,599:INFO:Copying training dataset
2022-11-05 17:20:05,615:INFO:Defining folds
2022-11-05 17:20:05,615:INFO:Declaring metric variables
2022-11-05 17:20:05,615:INFO:Importing untrained model
2022-11-05 17:20:05,618:INFO:Extra Trees Classifier Imported successfully
2022-11-05 17:20:05,618:INFO:Starting cross validation
2022-11-05 17:20:05,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:06,923:INFO:Calculating mean and std
2022-11-05 17:20:06,923:INFO:Creating metrics dataframe
2022-11-05 17:20:06,923:INFO:Uploading results into container
2022-11-05 17:20:06,923:INFO:Uploading model into container now
2022-11-05 17:20:06,934:INFO:master_model_container: 12
2022-11-05 17:20:06,934:INFO:display_container: 2
2022-11-05 17:20:06,934:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4877, verbose=0, warm_start=False)
2022-11-05 17:20:06,934:INFO:create_model() successfully completed......................................
2022-11-05 17:20:07,123:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:07,123:INFO:Creating metrics dataframe
2022-11-05 17:20:07,137:INFO:Initializing Light Gradient Boosting Machine
2022-11-05 17:20:07,137:INFO:Total runtime is 0.2861753980318706 minutes
2022-11-05 17:20:07,137:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:07,137:INFO:Initializing create_model()
2022-11-05 17:20:07,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:07,137:INFO:Checking exceptions
2022-11-05 17:20:07,137:INFO:Importing libraries
2022-11-05 17:20:07,137:INFO:Copying training dataset
2022-11-05 17:20:07,153:INFO:Defining folds
2022-11-05 17:20:07,153:INFO:Declaring metric variables
2022-11-05 17:20:07,153:INFO:Importing untrained model
2022-11-05 17:20:07,153:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-05 17:20:07,153:INFO:Starting cross validation
2022-11-05 17:20:07,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:08,049:INFO:Calculating mean and std
2022-11-05 17:20:08,051:INFO:Creating metrics dataframe
2022-11-05 17:20:08,058:INFO:Uploading results into container
2022-11-05 17:20:08,059:INFO:Uploading model into container now
2022-11-05 17:20:08,060:INFO:master_model_container: 13
2022-11-05 17:20:08,061:INFO:display_container: 2
2022-11-05 17:20:08,062:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4877, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-05 17:20:08,062:INFO:create_model() successfully completed......................................
2022-11-05 17:20:08,247:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:08,247:INFO:Creating metrics dataframe
2022-11-05 17:20:08,254:INFO:Initializing Dummy Classifier
2022-11-05 17:20:08,254:INFO:Total runtime is 0.3047997077306112 minutes
2022-11-05 17:20:08,254:INFO:SubProcess create_model() called ==================================
2022-11-05 17:20:08,255:INFO:Initializing create_model()
2022-11-05 17:20:08,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000118FE49C8B0>, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:08,255:INFO:Checking exceptions
2022-11-05 17:20:08,257:INFO:Importing libraries
2022-11-05 17:20:08,257:INFO:Copying training dataset
2022-11-05 17:20:08,264:INFO:Defining folds
2022-11-05 17:20:08,264:INFO:Declaring metric variables
2022-11-05 17:20:08,264:INFO:Importing untrained model
2022-11-05 17:20:08,265:INFO:Dummy Classifier Imported successfully
2022-11-05 17:20:08,265:INFO:Starting cross validation
2022-11-05 17:20:08,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-05 17:20:08,617:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,617:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,626:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,642:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,646:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,657:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,687:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,689:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,926:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,926:WARNING:C:\Users\ranji\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-05 17:20:08,936:INFO:Calculating mean and std
2022-11-05 17:20:08,936:INFO:Creating metrics dataframe
2022-11-05 17:20:08,936:INFO:Uploading results into container
2022-11-05 17:20:08,936:INFO:Uploading model into container now
2022-11-05 17:20:08,936:INFO:master_model_container: 14
2022-11-05 17:20:08,936:INFO:display_container: 2
2022-11-05 17:20:08,936:INFO:DummyClassifier(constant=None, random_state=4877, strategy='prior')
2022-11-05 17:20:08,936:INFO:create_model() successfully completed......................................
2022-11-05 17:20:09,135:INFO:SubProcess create_model() end ==================================
2022-11-05 17:20:09,151:INFO:Creating metrics dataframe
2022-11-05 17:20:09,151:INFO:Initializing create_model()
2022-11-05 17:20:09,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000118813ED4C0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4877, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-05 17:20:09,151:INFO:Checking exceptions
2022-11-05 17:20:09,171:INFO:Importing libraries
2022-11-05 17:20:09,172:INFO:Copying training dataset
2022-11-05 17:20:09,173:INFO:Defining folds
2022-11-05 17:20:09,173:INFO:Declaring metric variables
2022-11-05 17:20:09,173:INFO:Importing untrained model
2022-11-05 17:20:09,173:INFO:Declaring custom model
2022-11-05 17:20:09,173:INFO:Extra Trees Classifier Imported successfully
2022-11-05 17:20:09,173:INFO:Cross validation set to False
2022-11-05 17:20:09,173:INFO:Fitting Model
2022-11-05 17:20:09,784:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4877, verbose=0, warm_start=False)
2022-11-05 17:20:09,784:INFO:create_model() successfully completed......................................
2022-11-05 17:20:10,018:INFO:master_model_container: 14
2022-11-05 17:20:10,018:INFO:display_container: 2
2022-11-05 17:20:10,029:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4877, verbose=0, warm_start=False)
2022-11-05 17:20:10,029:INFO:compare_models() successfully completed......................................
2022-11-05 17:20:10,071:INFO:Initializing save_model()
2022-11-05 17:20:10,071:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4877, verbose=0, warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['purpose'],
                                    transformer=LeaveOneOutEncoder(cols=['purpose'],
                                                                   drop_invariant=False,
                                                                   handle_missing='return_nan',
                                                                   handle_unknown='value',
                                                                   random_state=4877,
                                                                   return_df=True,
                                                                   sigma=None,
                                                                   verbose=0))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2022-11-05 17:20:10,072:INFO:Adding model into prep_pipe
2022-11-05 17:20:10,141:INFO:best_model.pkl saved in current working directory
2022-11-05 17:20:10,195:INFO:Pipeline(memory=Memory(location=C:\Users\ranji\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['months_loan_duration', 'amount',
                                             'installment_rate',
                                             'residence_history', 'age',
                                             'existing_credits', 'depende...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=4877,
                                      verbose=0, warm_start=False))],
         verbose=False)
2022-11-05 17:20:10,195:INFO:save_model() successfully completed......................................
2022-11-05 17:22:16,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:22:16,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:22:16,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:22:16,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:22:18,039:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-05 17:23:06,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:23:06,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:23:06,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:23:06,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-05 17:23:07,483:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
